names(overall)[names(overall) == "RRFiles2"] <- "RRFiles3"
names(overall)[names(overall) == "RRCT_Yes3"] <- "RRCT_Yes4"
# Create time period variable to designate metrics are from entire selection period and whether they are POC focused
# remove % and convert all numbers to numeric
last_week$RRCT_Yes4 <-as.numeric(sub("%","",last_week$RRCT_Yes4))
last_four$RRCT_Yes4 <-as.numeric(sub("%","",last_four$RRCT_Yes4))
last_week$RRHE_Yes5 <-as.numeric(sub("%","",last_week$RRHE_Yes5))
last_four$RRHE_Yes5 <-as.numeric(sub("%","",last_four$RRHE_Yes5))
last_week$RRP_Yes6 <-as.numeric(sub("%","",last_week$RRP_Yes6))
last_four$RRP_Yes6 <-as.numeric(sub("%","",last_four$RRP_Yes6))
last_week$RRPS_IN7 <-as.numeric(sub("%","",last_week$RRPS_IN7))
last_four$RRPS_IN7 <-as.numeric(sub("%","",last_four$RRPS_IN7))
last_week$RRPSD_ScreenOut9 <-as.numeric(sub("%","",last_week$RRPSD_ScreenOut9))
last_four$RRPSD_ScreenOut9 <-as.numeric(sub("%","",last_four$RRPSD_ScreenOut9))
last_week$RRRWR210 <-as.numeric(sub("%","",last_week$RRRWR210))
last_four$RRRWR210 <-as.numeric(sub("%","",last_four$RRRWR210))
last_week$RRRec311 <-as.numeric(sub("%","",last_week$RRRec311))
last_four$RRRec311<-as.numeric(sub("%","",last_four$RRRec311))
last_week$RRRWC412 <-as.numeric(sub("%","",last_week$RRRWC412))
last_four$RRRWC412 <-as.numeric(sub("%","",last_four$RRRWC412))
last_week$RRHR513 <-as.numeric(sub("%","",last_week$RRHR513))
last_four$RRHR513 <-as.numeric(sub("%","",last_four$RRHR513))
ps_rating_tracker <- bind_rows(last_four, last_week, overall) %>%
mutate(time_period = factor(time_period, ordered = is.ordered(c("Last Four Weeks", "Last Weeks","Overall")))) %>%
arrange(RRPrescreener1, time_period)
View(ps_rating_tracker)
ps_rating_tracker <- ps_rating_tracker %>%
mutate(time_period = ifelse(grepl("POC", "RRPrescreener1"), "POC", time_period))
View(ps_rating_tracker)
library(pacman)
p_load(readxl, readr, dplyr, janitor, tidyr, stringr)
last_four <- read_csv("PSLast4Weeks12816.csv") %>%
remove_empty_rows() %>%
mutate(time_period = "Last Four Weeks")
last_week <- read_csv("PSLastWeek12816.csv") %>%
remove_empty_rows() %>%
mutate(time_period = "Last Week")
overall <- read_csv ("PSOverall12816.csv") %>%
remove_empty_rows() %>%
mutate(time_period = "Overall")
# First remove unneeded variables
names(overall)[names(overall) == "RRPR_Yes6"] <- "RRP_Yes6"
overall <- select(overall, RRPrescreener1, RRFiles2, RRCT_Yes3, RRHE_Yes5, RRP_Yes6, RRPS_IN7, RRPS_HR8, RRPS_RWC9, RRPS_R10, RRPS_RWR11, RRoverturns13, time_period)
# Rename variables to match other data frames, otherwise bind_rows won't work
names(overall)[names(overall) == "RRoverturns13"] <- "RRoverturns8"
names(overall)[names(overall) == "RRPS_HR8"] <- "RRHR513"
names(overall)[names(overall) == "RRPS_RWC9"] <- "RRRWC412"
names(overall)[names(overall) == "RRPS_R10"] <- "RRRec311"
names(overall)[names(overall) == "RRPS_RWR11"] <- "RRRWR210"
names(overall)[names(overall) == "RRFiles2"] <- "RRFiles3"
names(overall)[names(overall) == "RRCT_Yes3"] <- "RRCT_Yes4"
# Create time period variable to designate metrics are from entire selection period and whether they are POC focused
# remove % and convert all numbers to numeric
last_week$RRCT_Yes4 <-as.numeric(sub("%","",last_week$RRCT_Yes4))
last_four$RRCT_Yes4 <-as.numeric(sub("%","",last_four$RRCT_Yes4))
last_week$RRHE_Yes5 <-as.numeric(sub("%","",last_week$RRHE_Yes5))
last_four$RRHE_Yes5 <-as.numeric(sub("%","",last_four$RRHE_Yes5))
last_week$RRP_Yes6 <-as.numeric(sub("%","",last_week$RRP_Yes6))
last_four$RRP_Yes6 <-as.numeric(sub("%","",last_four$RRP_Yes6))
last_week$RRPS_IN7 <-as.numeric(sub("%","",last_week$RRPS_IN7))
last_four$RRPS_IN7 <-as.numeric(sub("%","",last_four$RRPS_IN7))
last_week$RRPSD_ScreenOut9 <-as.numeric(sub("%","",last_week$RRPSD_ScreenOut9))
last_four$RRPSD_ScreenOut9 <-as.numeric(sub("%","",last_four$RRPSD_ScreenOut9))
last_week$RRRWR210 <-as.numeric(sub("%","",last_week$RRRWR210))
last_four$RRRWR210 <-as.numeric(sub("%","",last_four$RRRWR210))
last_week$RRRec311 <-as.numeric(sub("%","",last_week$RRRec311))
last_four$RRRec311<-as.numeric(sub("%","",last_four$RRRec311))
last_week$RRRWC412 <-as.numeric(sub("%","",last_week$RRRWC412))
last_four$RRRWC412 <-as.numeric(sub("%","",last_four$RRRWC412))
last_week$RRHR513 <-as.numeric(sub("%","",last_week$RRHR513))
last_four$RRHR513 <-as.numeric(sub("%","",last_four$RRHR513))
ps_rating_tracker <- bind_rows(last_four, last_week, overall) %>%
mutate(time_period = factor(time_period, ordered = is.ordered(c("Last Four Weeks", "Last Weeks","Overall")))) %>%
arrange(RRPrescreener1, time_period)
#split POC entries to remove - POC -
strsplit(ps_rating_tracker$RRPrescreener1, "-")
ps_rating_tracker$POC <- strsplit(ps_rating_tracker$RRPrescreener1, "-")
ps_rating_tracker <- ps_rating_tracker %>%
mutate(time_period = ifelse(grepl("POC", RRPrescreener1), "POC", time_period))
View(ps_rating_tracker)
ps_rating_tracker <- ps_rating_tracker %>%
mutate(time_period = ifelse(grepl("POC", 'RRPrescreener1'), "POC", time_period))
View(ps_rating_tracker)
ps_rating_tracker <- bind_rows(last_four, last_week, overall) %>%
mutate(time_period = factor(time_period, ordered = is.ordered(c("Last Four Weeks", "Last Weeks","Overall")))) %>%
arrange(RRPrescreener1, time_period)
View(ps_rating_tracker)
ps_rating_tracker <- ps_rating_tracker %>%
mutate(time_period = ifelse(grepl("POC", 'RRPrescreener1'), "POC", time_period))
View(ps_rating_tracker)
ps_rating_tracker <- bind_rows(last_four, last_week, overall) %>%
#mutate(time_period = factor(time_period, ordered = is.ordered(c("Last Four Weeks", "Last Weeks","Overall")))) %>%
arrange(RRPrescreener1, time_period)
ps_rating_tracker <- ps_rating_tracker %>%
mutate(time_period = ifelse(grepl("POC", 'RRPrescreener1'), "POC", time_period))
View(ps_rating_tracker)
ps_rating_tracker <- bind_rows(last_four, last_week, overall) %>%
#mutate(time_period = factor(time_period, ordered = is.ordered(c("Last Four Weeks", "Last Weeks","Overall")))) %>%
arrange(RRPrescreener1, time_period)
View(ps_rating_tracker)
ps_rating_tracker <- ps_rating_tracker %>%
mutate(time_period = ifelse(grepl("- POC -", RRPrescreener1), "POC", time_period))
View(ps_rating_tracker)
ps_rating_tracker <- bind_rows(last_four, last_week, overall) %>%
arrange(RRPrescreener1, time_period)
#split POC entries to remove - POC -
#strsplit(ps_rating_tracker$RRPrescreener1, "-")#
#ps_rating_tracker$POC <- strsplit(ps_rating_tracker$RRPrescreener1, "-")
ps_rating_tracker <- ps_rating_tracker %>%
mutate(time_period = ifelse(grepl("- POC -", RRPrescreener1), "POC", time_period),
RRPrescreener1 = gsub("- POC -","", "RRPrescreener1"))
View(ps_rating_tracker)
ps_rating_tracker <- bind_rows(last_four, last_week, overall) %>%
arrange(RRPrescreener1, time_period)
#split POC entries to remove - POC -
#strsplit(ps_rating_tracker$RRPrescreener1, "-")#
#ps_rating_tracker$POC <- strsplit(ps_rating_tracker$RRPrescreener1, "-")
ps_rating_tracker <- ps_rating_tracker %>%
mutate(time_period = ifelse(grepl("- POC -", RRPrescreener1), "POC", time_period),
RRPrescreener1 = gsub("- POC -","", RRPrescreener1))
View(ps_rating_tracker)
ps_rating_tracker <- bind_rows(last_four, last_week, overall) %>%
arrange(RRPrescreener1, time_period)
#split POC entries to remove - POC -
#strsplit(ps_rating_tracker$RRPrescreener1, "-")#
#ps_rating_tracker$POC <- strsplit(ps_rating_tracker$RRPrescreener1, "-")
ps_rating_tracker <- ps_rating_tracker %>%
mutate(time_period = ifelse(grepl("- POC -", RRPrescreener1), "POC", time_period),
RRPrescreener1 = gsub("- POC -","", RRPrescreener1),
time_period = factor(time_period, ordered = is.ordered(c("Last Four Week", "Last Weeks", "Overall", "POC"))
View(ps_rating_tracker)
ps_rating_tracker <- bind_rows(last_four, last_week, overall) %>%
arrange(RRPrescreener1, time_period)
#split POC entries to remove - POC -
#strsplit(ps_rating_tracker$RRPrescreener1, "-")#
#ps_rating_tracker$POC <- strsplit(ps_rating_tracker$RRPrescreener1, "-")
ps_rating_tracker <- ps_rating_tracker %>%
mutate(time_period = ifelse(grepl("- POC -", RRPrescreener1), "POC", time_period),
RRPrescreener1 = gsub("- POC -","", RRPrescreener1),
time_period = factor(time_period, ordered = is.ordered(c("Last Four Week", "Last Weeks", "Overall", "POC")))
View(ps_rating_tracker)
ps_rating_tracker <- bind_rows(last_four, last_week, overall) %>%
arrange(RRPrescreener1, time_period)
#split POC entries to remove - POC -
#strsplit(ps_rating_tracker$RRPrescreener1, "-")#
#ps_rating_tracker$POC <- strsplit(ps_rating_tracker$RRPrescreener1, "-")
ps_rating_tracker <- ps_rating_tracker %>%
mutate(time_period = ifelse(grepl("- POC -", RRPrescreener1), "POC", time_period),
RRPrescreener1 = gsub("- POC -","", RRPrescreener1),
time_period = factor(time_period, ordered = is.ordered(c("Last Four Week", "Last Week", "Overall", "POC")))
View(ps_rating_tracker)
ps_rating_tracker <- bind_rows(last_four, last_week, overall) %>%
arrange(RRPrescreener1, time_period)
#split POC entries to remove - POC -
#strsplit(ps_rating_tracker$RRPrescreener1, "-")#
#ps_rating_tracker$POC <- strsplit(ps_rating_tracker$RRPrescreener1, "-")
ps_rating_tracker <- ps_rating_tracker %>%
mutate(time_period = ifelse(grepl("- POC -", RRPrescreener1), "POC", time_period),
RRPrescreener1 = gsub("- POC -","", RRPrescreener1),
time_period = factor(time_period, ordered = is.ordered(c("Last Four Week", "Last Week", "Overall", "POC"))))
View(ps_rating_tracker)
# Retitle variables if necessary
ps_rating_tracker <- bind_rows(last_four, last_week, overall) %>%
arrange(RRPrescreener1, time_period)
#split POC entries to remove - POC -
#strsplit(ps_rating_tracker$RRPrescreener1, "-")#
#ps_rating_tracker$POC <- strsplit(ps_rating_tracker$RRPrescreener1, "-")
ps_rating_tracker <- ps_rating_tracker %>%
mutate(time_period = ifelse(grepl("- POC -", RRPrescreener1), "POC", time_period),
RRPrescreener1 = gsub("- POC -","", RRPrescreener1),
time_period = factor(time_period, ordered = is.ordered(c("Last Four Week", "Last Week", "Overall", "POC")))) %>%
arrange(RRPrescreener1, time_period)
View(ps_rating_tracker)
table(ps_rating_tracker$RRPrescreener1)
View(ps_rating_tracker)
View(overall)
ps_rating_tracker <- bind_rows(last_four, last_week, overall) %>%
arrange(RRPrescreener1, time_period)
#split POC entries to remove - POC -
#strsplit(ps_rating_tracker$RRPrescreener1, "-")#
#ps_rating_tracker$POC <- strsplit(ps_rating_tracker$RRPrescreener1, "-")
ps_rating_tracker <- ps_rating_tracker %>%
mutate(time_period = ifelse(grepl("- POC -", RRPrescreener1), "POC", time_period),
RRPrescreener1 = gsub("- POC - ","", RRPrescreener1),
time_period = factor(time_period, ordered = is.ordered(c("Last Four Week", "Last Week", "Overall", "POC")))) %>%
arrange(RRPrescreener1, time_period)
View(ps_rating_tracker)
View(ps_rating_tracker)
psinoutsideavg <- ps_rating_tracker[ps_rating_tracker$RRPS_IN7 < 87, ps_rating_tracker$RRPS_IN7 < 97]
psinoutsideavg <- ps_rating_tracker[ps_rating_tracker$RRPS_IN7 < 87, ps_rating_tracker$RRPS_IN7 > 97]
psinoutsideavg <- ps_rating_tracker[ps_rating_tracker$RRPS_IN7 < 87]
psinoutsideavg <- ps_rating_tracker[ps_rating_tracker$RRPS_IN7 < '87']
psinoutsideavg <- ps_rating_tracker[ps_rating_tracker$RRPS_IN7 > 97]
psinoutsideavg <- subset[ps_rating_tracker$RRPS_IN7 > 97]
psinoutside <- subset(ps_rating_tracker, RRPS_IN7 > 97)
View(psinoutside)
psinoutside <- subset(ps_rating_tracker, RRPS_IN7 > 97 & RRPS_IN7 < 88)
View(psinoutside)
psinoutside <- subset(ps_rating_tracker, RRPS_IN7 > 97, RRPS_IN7 < 88)
View(psinoutside)
psinoutside <- ps_rating_tracker[ which(ps_rating_tracker$RRPS_IN7>'97')]
psinoutside <- subset(ps_rating_tracker, RRPS_IN7 > 97 | RRPS_IN7 < 88)
View(psinoutside)
ctlow <- subset(ps_rating_tracker, RRCT_Yes4 < 77)
View(ctlow)
cthigh <- subset(ps_rating_tracker, RRCT_Yes4 > 89)
View(cthigh)
hehigh <- subset(ps_rating_tracker, RRHE_Yes5 > 97)
helow <- subset(ps_rating_tracker, RRHE_Yes5 < 88)
View(helow)
prolow <-subset(ps_rating_tracker, RRP_Yes6 < 80)
prohigh <-subset(ps_rating_tracker, RRP_Yes6 > 93)
View(prolow)
View(prohigh)
View(prolow)
while (RRCT_Yes4 > 89) {
print("too hight")
if (RRCT_Yes4 < 77)
print("too low")
} else {
print("ok")
}
while (RRCT_Yes4 > 89) {
print("too hight")
if (RRCT_Yes4 < 77)
print("too low")
}
while (ps_rating_tracker$RRCT_Yes4 > 89) {
print("too hight")
if (ps_rating_tracker$RRCT_Yes4 < 77)
print("too low")
}
View(ps_rating_tracker)
print(ps_rating_tracker)
while (ps_rating_tracker$RRCT_Yes4 > 89) {
print("too hight")
if (ps_rating_tracker$RRCT_Yes4 < 77)
print("too low")
}
View(psinoutside)
psinoutside <- subset(ps_rating_tracker, RRPS_IN7 > 97 | RRPS_IN7 < 88 | RRHR513 > 25)
View(psinoutside)
View(psinoutside)
psinoutside <- subset(ps_rating_tracker, RRPS_IN7 > 97 | RRPS_IN7 < 88)
View(ps_rating_tracker)
total_high <- ps_rating_tracker$RRPS_IN7[ps_rating_tracker$RRPrescreener1 == "TOTAL" & ps_rating_tracker$time_period == "Overall"]
total_high
total_high <- ps_rating_tracker$RRPS_IN7[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"]
total_high
total_high_moving <- ps_rating_tracker$RRPS_IN7[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"] + 6
total_high_max <- 97
total_high_use <- ifelse(total_high_moving > total_high_max, total_high_max, total_high_moving)
total_high_use
total_high_moving <- ps_rating_tracker$RRPS_IN7[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"]
total_high_max <- 97
total_high_use <- ifelse(total_high_moving > total_high_max, total_high_max, total_high_moving)
test <- subset(ps_rating_tracker[ps_rating_tracker$time_period == "Overall"], RRPS_IN7 > total_high_use | RRPS_IN7 < total_low_use)
test <- subset(ps_rating_tracker, RRPS_IN7 > total_high_use | RRPS_IN7 < total_low_use)
total_low_use <- ps_rating_tracker$RRPS_IN7[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"] - 6
test <- subset(ps_rating_tracker, RRPS_IN7 > total_high_use | RRPS_IN7 < total_low_use)
View(test)
test <- ps_rating_tracker %>%
filter(time_period == "Last Week") %>%
subset(ps_rating_tracker, RRPS_IN7 > total_high_use | RRPS_IN7 < total_low_use)
test <- ps_rating_tracker %>%
filter(time_period == "Last Week") %>%
subset(., RRPS_IN7 > total_high_use | RRPS_IN7 < total_low_use)
View(test)
View(test)
View(ps_rating_tracker)
View(test)
test <- ps_rating_tracker %>%
filter(time_period == "Last Week") %>%
subset(ps_rating_tracker, RRPS_IN7 > total_high_use | RRPS_IN7 < total_low_use)
test <- ps_rating_tracker %>%
filter(time_period == "Last Week") %>%
subset(RRPS_IN7 > total_high_use | RRPS_IN7 < total_low_use)
View(test)
psinlastweekoutside <- ps_rating_tracker %>%
filter(time_period == "Last Week") %>%
subset(RRPS_IN7 > total_high_use | RRPS_IN7 < total_low_use)
View(psinlastweekoutside)
library(pacman)
p_load(readxl, readr, dplyr, janitor, tidyr, stringr)
last_four <- read_csv("PSLast4Weeks12816.csv") %>%
remove_empty_rows() %>%
mutate(time_period = "Last Four Weeks")
last_week <- read_csv("PSLastWeek12816.csv") %>%
remove_empty_rows() %>%
mutate(time_period = "Last Week")
overall <- read_csv ("PSOverall12816.csv") %>%
remove_empty_rows() %>%
mutate(time_period = "Overall")
# First remove unneeded variables
names(overall)[names(overall) == "RRPR_Yes6"] <- "RRP_Yes6"
overall <- select(overall, RRPrescreener1, RRFiles2, RRCT_Yes3, RRHE_Yes5, RRP_Yes6, RRPS_IN7, RRPS_HR8, RRPS_RWC9, RRPS_R10, RRPS_RWR11, RRoverturns13, time_period)
# Rename variables to match other data frames, otherwise bind_rows won't work
names(overall)[names(overall) == "RRoverturns13"] <- "RRoverturns8"
names(overall)[names(overall) == "RRPS_HR8"] <- "RRHR513"
names(overall)[names(overall) == "RRPS_RWC9"] <- "RRRWC412"
names(overall)[names(overall) == "RRPS_R10"] <- "RRRec311"
names(overall)[names(overall) == "RRPS_RWR11"] <- "RRRWR210"
names(overall)[names(overall) == "RRFiles2"] <- "RRFiles3"
names(overall)[names(overall) == "RRCT_Yes3"] <- "RRCT_Yes4"
# remove % and convert all numbers to numeric
last_week$RRCT_Yes4 <-as.numeric(sub("%","",last_week$RRCT_Yes4))
last_four$RRCT_Yes4 <-as.numeric(sub("%","",last_four$RRCT_Yes4))
last_week$RRHE_Yes5 <-as.numeric(sub("%","",last_week$RRHE_Yes5))
last_four$RRHE_Yes5 <-as.numeric(sub("%","",last_four$RRHE_Yes5))
last_week$RRP_Yes6 <-as.numeric(sub("%","",last_week$RRP_Yes6))
last_four$RRP_Yes6 <-as.numeric(sub("%","",last_four$RRP_Yes6))
last_week$RRPS_IN7 <-as.numeric(sub("%","",last_week$RRPS_IN7))
last_four$RRPS_IN7 <-as.numeric(sub("%","",last_four$RRPS_IN7))
last_week$RRPSD_ScreenOut9 <-as.numeric(sub("%","",last_week$RRPSD_ScreenOut9))
last_four$RRPSD_ScreenOut9 <-as.numeric(sub("%","",last_four$RRPSD_ScreenOut9))
last_week$RRRWR210 <-as.numeric(sub("%","",last_week$RRRWR210))
last_four$RRRWR210 <-as.numeric(sub("%","",last_four$RRRWR210))
last_week$RRRec311 <-as.numeric(sub("%","",last_week$RRRec311))
last_four$RRRec311<-as.numeric(sub("%","",last_four$RRRec311))
last_week$RRRWC412 <-as.numeric(sub("%","",last_week$RRRWC412))
last_four$RRRWC412 <-as.numeric(sub("%","",last_four$RRRWC412))
last_week$RRHR513 <-as.numeric(sub("%","",last_week$RRHR513))
last_four$RRHR513 <-as.numeric(sub("%","",last_four$RRHR513))
# Add overall datafame to the bind
# Add new time periods to factor
# Arrange columns in whatever order makes sense for viewer
# Retitle variables if necessary
ps_rating_tracker <- bind_rows(last_four, last_week, overall) %>%
arrange(RRPrescreener1, time_period)
#split POC entries to remove - POC -
#strsplit(ps_rating_tracker$RRPrescreener1, "-")#
#ps_rating_tracker$POC <- strsplit(ps_rating_tracker$RRPrescreener1, "-")
ps_rating_tracker <- ps_rating_tracker %>%
mutate(time_period = ifelse(grepl("- POC -", RRPrescreener1), "POC", time_period),
RRPrescreener1 = gsub("- POC - ","", RRPrescreener1),
time_period = factor(time_period, ordered = is.ordered(c("Last Four Week", "Last Week", "Overall", "POC")))) %>%
arrange(RRPrescreener1, time_period)
#create table that pulls in PS In ratings that are not within 6% of PS In total
# psinoutsideavg <- subset[ps_rating_tracker$RRPS_IN7 > 97]
# Error in subset[ps_rating_tracker$RRPS_IN7 > 97] :
#   object of type 'closure' is not subsettable
#PS In ratings above 97% and below 88%
psinoutside <- subset(ps_rating_tracker, RRPS_IN7 > 97 | RRPS_IN7 < 88)
#need to base this on total PSIN ratings for week
#create benchmark for PS In based on total PS in ratings overall
total_high_moving <- ps_rating_tracker$RRPS_IN7[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"] + 6
#create max when average plus 6 is too high
total_high_max <- 97
#create rule for when to use max and when to use average+6
total_high_use <- ifelse(total_high_moving > total_high_max, total_high_max, total_high_moving)
#create low for PS in rate
total_low_use <- ps_rating_tracker$RRPS_IN7[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"] - 6
#filter for PS In rates outside of bounds for just last week of data
psinlastweekoutside <- ps_rating_tracker %>%
filter(time_period == "Last Week") %>%
subset(RRPS_IN7 > total_high_use | RRPS_IN7 < total_low_use)
#need to base this on total PSIN ratings for week
#create benchmark for PS In based on total PS in ratings overall
ct_high_moving <- ps_rating_tracker$RRCT_Yes4[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"] + 6
#create max when average plus 6 is too high
ct_high_max <- 91
#create rule for when to use max and when to use average+6
ct_high_use <- ifelse(ct_high_moving > ct_high_max, ct_high_max, ct_high_moving)
#create low for PS in rate
ct_low_use <- ps_rating_tracker$RRCT_Yes4[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"] - 6
ct_low_max <- 77
ct_low_use <- ifelse(ct_high_moving > ct_high_max, ct_high_max, ct_high_moving)
#filter for PS In rates outside of bounds for just last week of data
ctlastweekoutside <- ps_rating_tracker %>%
filter(time_period == "Last Week") %>%
subset(RRCT_Yes4 > ct_high_use | RRCT_Yes4 < ct_low_use)
View(ctlastweekoutside)
View(ctlastweekoutside)
#create low for PS in rate
ct_low_use <- ps_rating_tracker$RRCT_Yes4[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"] - 6
ct_low_max <- 77
ct_low_use <- ifelse(ct_low_use < ct_low_max, ct_low_max, ct_low_use)
#filter for PS In rates outside of bounds for just last week of data
ctlastweekoutside <- ps_rating_tracker %>%
filter(time_period == "Last Week") %>%
subset(RRCT_Yes4 > ct_high_use | RRCT_Yes4 < ct_low_use)
View(ctlastweekoutside)
pro_high_moving <- ps_rating_tracker$RRP_Yes6[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"] + 6
#create max when average plus 6 is too high
pro_high_max <- 93
#create rule for when to use max and when to use average+6
pro_high_use <- ifelse(pro_high_moving > pro_high_max, pro_high_max, pro_high_moving)
#create low for PS in rate
pro_low_use <- ps_rating_tracker$RRP_Yes6[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"] - 6
pro_low_max <- 80
pro_low_use <- ifelse(pro_low_use < pro_low_max, pro_low_max, cpro_low_use)
#filter for PS In rates outside of bounds for just last week of data
prolastweekoutside <- ps_rating_tracker %>%
filter(time_period == "Last Week") %>%
subset(RRP_Yes6 > pro_high_use | RRP_Yes6 < pro_low_use)
View(prolastweekoutside)
#create low for PS in rate
pro_low_use <- ps_rating_tracker$RRP_Yes6[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"] - 6
pro_low_max <- 80
pro_low_use <- ifelse(pro_low_use < pro_low_max, pro_low_max, pro_low_use)
#filter for PS In rates outside of bounds for just last week of data
prolastweekoutside <- ps_rating_tracker %>%
filter(time_period == "Last Week") %>%
subset(RRP_Yes6 > pro_high_use | RRP_Yes6 < pro_low_use)
#do the same for Highly Recommend
hr_high_moving <- ps_rating_tracker$RRHR513[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"] + 6
#create max when average plus 6 is too high
hr_high_max <- 22
#create rule for when to use max and when to use average+6
phr_high_use <- ifelse(hr_high_moving > hr_high_max, hr_high_max, hr_high_moving)
#create low for PS in rate
hr_low_use <- ps_rating_tracker$RRP_Yes6[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"] - 6
hr_low_max <- 8
hr_low_use <- ifelse(hr_low_use < hr_low_max, hr_low_max, hr_low_use)
#do the same for Highly Recommend
hr_high_moving <- ps_rating_tracker$RRHR513[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"] + 6
#create max when average plus 6 is too high
hr_high_max <- 22
#create rule for when to use max and when to use average+6
phr_high_use <- ifelse(hr_high_moving > hr_high_max, hr_high_max, hr_high_moving)
#create low for PS in rate
hr_low_use <- ps_rating_tracker$RRP_Yes6[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"] - 6
hr_low_max <- 8
hr_low_use <- ifelse(hr_low_use < hr_low_max, hr_low_max, hr_low_use)
#filter for PS In rates outside of bounds for just last week of data
hrlastweekoutside <- ps_rating_tracker %>%
filter(time_period == "Last Week") %>%
subset(RRHR513 > hr_high_use | RRHR513 < hr_low_use)
#do the same for Highly Recommend
hr_high_moving <- ps_rating_tracker$RRHR513[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"] + 6
#create max when average plus 6 is too high
hr_high_max <- 22
#create rule for when to use max and when to use average+6
hr_high_use <- ifelse(hr_high_moving > hr_high_max, hr_high_max, hr_high_moving)
#create low for PS in rate
hr_low_use <- ps_rating_tracker$RRP_Yes6[ps_rating_tracker$RRPrescreener1 == "zz_TOTAL" & ps_rating_tracker$time_period == "Overall"] - 6
hr_low_max <- 8
hr_low_use <- ifelse(hr_low_use < hr_low_max, hr_low_max, hr_low_use)
#filter for PS In rates outside of bounds for just last week of data
hrlastweekoutside <- ps_rating_tracker %>%
filter(time_period == "Last Week") %>%
subset(RRHR513 > hr_high_use | RRHR513 < hr_low_use)
View(hrlastweekoutside)
library(pacman)
p_load(readxl, readr, dplyr, janitor, tidyr, stringr)
last_four <- read_csv("PSLast4Weeks.csv") %>%
remove_empty_rows() %>%
mutate(time_period = "Last Four Weeks")
last_week <- read_csv("PSLastWeek.csv") %>%
remove_empty_rows() %>%
mutate(time_period = "Last Week")
overall <- read_csv ("PSOverall.csv") %>%
remove_empty_rows() %>%
mutate(time_period = "Overall")
# First remove unneeded variables
names(overall)[names(overall) == "RRPR_Yes6"] <- "RRP_Yes6"
overall <- select(overall, RRPrescreener1, RRFiles2, RRCT_Yes3, RRHE_Yes5, RRP_Yes6, RRPS_IN7, RRPS_HR8, RRPS_RWC9, RRPS_R10, RRPS_RWR11, RRoverturns13, time_period)
# Rename variables to match other data frames, otherwise bind_rows won't work
names(overall)[names(overall) == "RRoverturns13"] <- "RRoverturns8"
names(overall)[names(overall) == "RRPS_HR8"] <- "RRHR513"
names(overall)[names(overall) == "RRPS_RWC9"] <- "RRRWC412"
names(overall)[names(overall) == "RRPS_R10"] <- "RRRec311"
names(overall)[names(overall) == "RRPS_RWR11"] <- "RRRWR210"
names(overall)[names(overall) == "RRFiles2"] <- "RRFiles3"
names(overall)[names(overall) == "RRCT_Yes3"] <- "RRCT_Yes4"
library(pacman)
p_load(readxl, readr, dplyr, janitor, tidyr, stringr)
last_four <- read_csv("PSLast4Weeks.csv") %>%
remove_empty_rows() %>%
mutate(time_period = "Last Four Weeks")
last_week <- read_csv("PSLastWeek.csv") %>%
remove_empty_rows() %>%
mutate(time_period = "Last Week")
overall <- read_csv ("PSOverall.csv") %>%
remove_empty_rows() %>%
mutate(time_period = "Overall")
# First remove unneeded variables
names(overall)[names(overall) == "RRPR_Yes6"] <- "RRP_Yes6"
overall <- select(overall, RRPrescreener1, RRFiles2, RRCT_Yes3, RRHE_Yes5, RRP_Yes6, RRPS_IN7, RRPS_HR8, RRPS_RWC9, RRPS_R10, RRPS_RWR11, RRoverturns13, time_period)
# Rename variables to match other data frames, otherwise bind_rows won't work
names(overall)[names(overall) == "RRoverturns13"] <- "RRoverturns8"
names(overall)[names(overall) == "RRPS_HR8"] <- "RRHR513"
names(overall)[names(overall) == "RRPS_RWC9"] <- "RRRWC412"
names(overall)[names(overall) == "RRPS_R10"] <- "RRRec311"
names(overall)[names(overall) == "RRPS_RWR11"] <- "RRRWR210"
names(overall)[names(overall) == "RRFiles2"] <- "RRFiles3"
names(overall)[names(overall) == "RRCT_Yes3"] <- "RRCT_Yes4"
# Rename variables to match other data frames, otherwise bind_rows won't work
names(overall)[names(overall) == "RRoverturns13"] <- "RRoverturns8"
names(overall)[names(overall) == "RRPS_HR8"] <- "RRHR513"
names(overall)[names(overall) == "RRPS_RWC9"] <- "RRRWC412"
names(overall)[names(overall) == "RRPS_R10"] <- "RRRec311"
names(overall)[names(overall) == "RRPS_RWR11"] <- "RRRWR210"
names(overall)[names(overall) == "RRFiles2"] <- "RRFiles3"
names(overall)[names(overall) == "RRCT_Yes3"] <- "RRCT_Yes4"
# First remove unneeded variables
names(overall)[names(overall) == "RRPR_Yes6"] <- "RRP_Yes6"
overall <- select(overall, RRPrescreener1, RRFiles2, RRCT_Yes3, RRHE_Yes5, RRP_Yes6, RRPS_IN7, RRPS_HR8, RRPS_RWC9, RRPS_R10, RRPS_RWR11, RRoverturns13, time_period)
# Rename variables to match other data frames, otherwise bind_rows won't work
names(overall)[names(overall) == "RRoverturns13"] <- "RRoverturns8"
names(overall)[names(overall) == "RRPS_HR8"] <- "RRHR513"
names(overall)[names(overall) == "RRPS_RWC9"] <- "RRRWC412"
names(overall)[names(overall) == "RRPS_R10"] <- "RRRec311"
names(overall)[names(overall) == "RRPS_RWR11"] <- "RRRWR210"
names(overall)[names(overall) == "RRFiles2"] <- "RRFiles3"
names(overall)[names(overall) == "RRCT_Yes3"] <- "RRCT_Yes4"
# First remove unneeded variables
names(overall)[names(overall) == "RRPR_Yes6"] <- "RRP_Yes6"
overall <- select(overall, RRPrescreener1, RRFiles3, RRCT_Yes3, RRHE_Yes5, RRP_Yes6, RRPS_IN7, RRPS_HR8, RRPS_RWC9, RRPS_R10, RRPS_RWR11, RRoverturns13, time_period)
overall <- select(overall, RRPrescreener1, RRFiles3, RRCT_Yes4, RRHE_Yes5, RRP_Yes6, RRPS_IN7, RRPS_HR8, RRPS_RWC9, RRPS_R10, RRPS_RWR11, RRoverturns13, time_period)
names(overall)[names(overall) == "RRPR_Yes6"] <- "RRP_Yes6"
overall <- select(overall, RRPrescreener1, RRFiles3, RRCT_Yes4, RRHE_Yes5, RRP_Yes6, RRPS_IN7, RRPS_HR513, RRPS_RWC9, RRPS_R10, RRPS_RWR11, RRoverturns13, time_period)
