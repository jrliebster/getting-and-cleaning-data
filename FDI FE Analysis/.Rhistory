# Aggregating Steps:
#   1. Load all datasets and packages
# 2. Filter out Cohort 27 observations for "which cohort" column, only Cohort 28 observations left
# 3. Filter out unnecessary columns in all datasets
# a. FDI data--keep: response ID, status, FC ID, cohort, 5 digit ID 28, DBN, grades, CCT/ICT, SC, SETSS, D75, fellow assigned SA, obs date, 1a, 1c, 1e, comments, 2b, 2c, 2d, comments, 3b, 3c, 3d, comments, 4a, comments, effective
# i. Create a business rule for grades that pulls in the numbers to one column?--discuss if this is possible with Robert
# 1) Group by grade bands (lower elem/upper elem, middle, high) and pull 0/1 or y/n into a column with the grade band as a header (ask Jake for existing code)
# a) **look out for ENL teachers who teach across K-12
# i) This doesn’t actually come up in analysis
# ii. Ensure ratings (developing, effective, etc.) are strings
# 1) Need to be numeric for LM
# a) Could have sep vector for numeric rating for descriptive statistics
# 2) Can also get mode to show where distribution lies--MG never offers a specific average for FDI
# a) Think about it more as a grading curve
# 3) Can also do ANOVA test for significance of relationship between a numeric and string variable
# 4. Join NHF and Vacancy List
# a. keep only: NHF--jobID, effective date, employee ID, name, email, phone; Vacancy List--effective date, jobID, current location
# 5. Rename all 5 digit column codes to "fellow_code"
# a. Join all datasets by this variable
#
# Business rules for cleaned data
# • All lowercase
# • mar_dom1a, mar_dom2a, mar_dom3b for domains for FDI
# TT2ID
# prin_column name for principal survey column names
# MG errs on the side of keeping variables in dataset, rather than removing
#load datasets
#FDI observation data for City, BC, Pace
#5 digit Fellow code crosswalk
#principal survey data
#EOT obseration ratings
#Fellow observation rating tracker (just the sheets "techniques detail" and "observation ratings detail")
#Vacancy list 11/30/16
#NHF 4/5/17
bc_fdi <- read_csv ("bc_fdi.csv")
pace_fdi <- read_csv ("pace_fdi.csv")
city_fdi <- read_csv ("city_fdi.csv")
fellow_code_crosswalk <- read_csv ("fellow_code_crosswalk.csv")
principal_survey_data <- read_csv ("principal_survey_data.csv")
end_of_pst_ratings_detail <- read_csv ("end_of_pst_ratings_detail.csv")
final_pst_ratings <- read_csv("final_pst_ratings.csv")
technique_ratings <- read_csv ("technique_ratings.csv")
vacancy_list <- read_csv("vacancy_list_113016.csv")
nhf <- read_csv("nhf.csv")
june_2016_pst_ratings <-read_csv("june_2016_pst_final_ratings.csv")
june_2016_pst_ratings <- june_2016_pst_ratings %>%
clean_names()
end_of_pst_ratings_detail <- end_of_pst_ratings_detail %>%
clean_names()
final_pst_ratings <- final_pst_ratings %>%
clean_names()
# Filter out Cohort 27 observations for "which cohort" column in all FDI datasets, add to sep dataset for comparison, then keep only Cohort 28 observations in all dataframe, complete cases as well
#checked against original excel files, all have correct number of cases
#before joining all fdi datasets together, need to create a column in each fdi dataset that signifies the university
bc_fdi_2016<-filter(bc_fdi, `Which cohort is this Fellow a member of?` ==  "Cohort 27")
bc_fdi_2016<-filter(bc_fdi_2016, `Status` ==  "Complete") %>%
mutate(university="BC")
city_fdi_2016<-filter(city_fdi, `Which cohort is this Fellow a member of?` ==  "Cohort 27")
city_fdi_2016<-filter(city_fdi_2016, `Status` ==  "Complete") %>%
mutate(university="City")
pace_fdi_2016<-filter(pace_fdi, `Which cohort is this Fellow a member of?` ==  "Cohort 27")
pace_fdi_2016<-filter(pace_fdi_2016, `Status` ==  "Complete") %>%
mutate(university="Pace")
all_fdi_2016 <- rbind(pace_fdi_2016, city_fdi_2016)
all_fdi_2016 <- rbind(all_fdi_2016, bc_fdi_2016)
bc_fdi<-filter(bc_fdi, `Which cohort is this Fellow a member of?` ==  "Cohort 28")
bc_fdi<-filter(bc_fdi, `Status` ==  "Complete") %>%
mutate(university="BC")
city_fdi<-filter(city_fdi, `Which cohort is this Fellow a member of?` ==  "Cohort 28")
city_fdi<-filter(city_fdi, `Status` ==  "Complete") %>%
mutate(university="City")
pace_fdi<-filter(pace_fdi, `Which cohort is this Fellow a member of?` ==  "Cohort 28")
pace_fdi<-filter(pace_fdi, `Status` ==  "Complete") %>%
mutate(university="Pace")
#join all fdi data together into one larger dataset using rbind (as all variables are same)
#then join with crosswalk of Fellow codes to we have their appid (change variables to have same name first)
all_fdi <- rbind(pace_fdi, city_fdi)
all_fdi <- rbind(all_fdi, bc_fdi)
names(all_fdi)[names(all_fdi) == "Please select the Cohort 28 Fellow ID that corresponds to the Fellow you observed."] <- "fellow_id"
names(fellow_code_crosswalk)[names(fellow_code_crosswalk) == "Six- Digit ID"] <- "fellow_id"
all_fdi <- left_join (all_fdi, fellow_code_crosswalk, by = "fellow_id")
names(all_fdi)[names(all_fdi) == "APP USER ID"] <- "tt2id"
#all_fdi now includes school code and appid from fellow_code_crosswalk, no missing cases, all have appid
#remove columns that include survey access data (keep school DBN column to confirm it is the same school, but reference School Code, as this column follows the 00X000 format)
#remove comments columns!
all_fdi <- all_fdi[, !(colnames(all_fdi) %in% c("Referer","Extended Referer","Language", "SessionID", "User Agent", "Extended User Agent", "Tags", "IP Address", "Contact ID", "Legacy Comments", "Longitude", "Latitude", "Country", "City", "State/Region", "Postal", "Time Started", "Comments", "URL Redirect", "Please select the Cohort 27 Fellow ID that corresponds to the Fellow you observed."))]
#change fdi ratings column headings to match Megan's business rules (see line 28)
all_fdi <- all_fdi %>%
clean_names()
all_fdi <- all_fdi %>%
rename(mar_dom1a = x1a_please_record_your_observation_rating_for_component_1a_demonstrating_knowledge_of_content_and_pedagogy,
mar_dom1c = x1c_please_record_your_observation_rating_for_component_1c_setting_instructional_outcomes,
mar_dom1e = x1e_please_record_your_observation_rating_for_component_1e_designing_coherent_instruction, mar_dom2b = x2b_please_record_your_observation_rating_for_component_2b_establishing_a_culture_for_learning,
mar_dom2c = x2c_please_record_your_observation_rating_for_component_2c_managing_classroom_procedures,
mar_dom2d = x2d_please_record_your_observation_rating_for_component_2d_managing_student_behavior,
mar_dom3b = x3b_please_record_your_observation_rating_for_component_3b_using_questioning_and_discussion_techniques,
mar_dom3c = x3c_please_record_your_observation_rating_for_component_3c_engaging_students_in_learning,
mar_dom3d = x3d_please_record_your_observation_rating_for_component_3d_using_assessment_in_instruction,
mar_dom4a = x4a_please_record_your_observation_rating_for_component_4a_reflecting_on_teaching,
cohort = which_cohort_is_this_fellow_a_member_of,
effectiveness = how_effective_do_you_believe_this_fellow_is_compared_to_other_teachers_with_similar_experience_eg_first_year_fellows_compared_to_other_first_year_teachers,
subject = what_is_the_fellow_s_assigned_university_subject_area_please_select_the_subject_they_are_training_in_at_their_university_not_the_subject_they_are_teaching_during_this_observation,
other_sped_setting = n_a_if_applicable_please_identify_the_special_education_setting_of_the_observed_lesson_select_all_applicable_settings,
d75 = d75_if_applicable_please_identify_the_special_education_setting_of_the_observed_lesson_select_all_applicable_settings,
setts = setts_if_applicable_please_identify_the_special_education_setting_of_the_observed_lesson_select_all_applicable_settings,
self_contained = self_contained_if_applicable_please_identify_the_special_education_setting_of_the_observed_lesson_select_all_applicable_settings,
cct_ict = ctt_ict_if_applicable_please_identify_the_special_education_setting_of_the_observed_lesson_select_all_applicable_settings)
# #************Field consultant ID and subject areacolumns not changing--why? changed to clean version and it worked, so leaving this here as a reminder
## can also rename columns when selecting them [select(new_name = old_name)]
## read_csv(aasdfasdfhjaksdf, col_names =
# names(all_fdi)[names(all_fdi) == "1a: :Please record your observation rating for component 1a: Demonstrating Knowledge of Content and Pedagogy."] <- "mar_dom1a"
# names(all_fdi)[names(all_fdi) == "1c::Please record your observation rating for component 1c: Setting Instructional Outcomes."] <- "mar_dom1c"
# names(all_fdi)[names(all_fdi) == "1e::Please record your observation rating for component 1e: Designing Coherent Instruction."] <- "mar_dom1e"
# names(all_fdi)[names(all_fdi) == "2b: :Please record your observation rating for component 2b: Establishing a Culture for Learning."] <- "mar_dom2b"
# names(all_fdi)[names(all_fdi) == "2c::Please record your observation rating for component 2c: Managing Classroom Procedures."] <- "mar_dom2c"
# names(all_fdi)[names(all_fdi) == "2d::Please record your observation rating for component 2d: Managing Student Behavior."] <- "mar_dom2d"
# names(all_fdi)[names(all_fdi) == "3b::Please record your observation rating for component 3b: Using Questioning and Discussion Techniques."] <- "mar_dom3b"
# names(all_fdi)[names(all_fdi) == "3c::Please record your observation rating for component 3c: Engaging Students in Learning."] <- "mar_dom3c"
# names(all_fdi)[names(all_fdi) == "3d::Please record your observation rating for component 3d: Using Assessment in Instruction."] <- "mar_dom3d"
# names(all_fdi)[names(all_fdi) == "4a::Please record your observation rating for component 4a: Reflecting on Teaching."] <- "mar_dom4a"
# names(all_fdi)[names(all_fdi) == "How effective do you believe this Fellow is compared to other teachers with similar experience (eg- first year Fellows compared to other first year teachers)?"] <- "effectiveness_compared_to_other_teachers"
# names(all_fdi)[names(all_fdi) == "Comments for Domain 1"] <- "dom1_comments"
# names(all_fdi)[names(all_fdi) == "Comments for Domain 2"] <- "dom2_comments"
# names(all_fdi)[names(all_fdi) == "Comments for Domain 3"] <- "dom3_comments"
# names(all_fdi)[names(all_fdi) == "Comments for Domain 4"] <- "dom4_comments"
# names(all_fdi)[names(all_fdi) == "What is the Fellow's assigned university subject area? (Please select the subject they are training in at their university, NOT the subject they are teaching during this observation.)"] <- "fellow_subject_area"
# names(all_fdi)[names(all_fdi) == "What was the date of this observation?"] <- "observation_date"
# names(all_fdi)[names(all_fdi) == "Please select your Field Consultant ID."] <- "field_consultant_id"
# names(all_fdi)[names(all_fdi) == "Which cohort is this Fellow a member of?"] <- "cohort"
# names(all_fdi)[names(all_fdi) == "Please enter the school DBN as a letter and 3-digit number (e.g. X232 or K021)"] <- "DBN"
# names(all_fdi)[names(all_fdi) == "CTT/ICT:If applicable, please identify the Special Education setting of the observed lesson. Select all applicable settings."] <- "cct_ict"
# names(all_fdi)[names(all_fdi) == "Self-contained:If applicable, please identify the Special Education setting of the observed lesson. Select all applicable settings."] <- "self_contained"
# names(all_fdi)[names(all_fdi) == "SETTS:If applicable, please identify the Special Education setting of the observed lesson. Select all applicable settings."] <- "setts"
# names(all_fdi)[names(all_fdi) == "D75:If applicable, please identify the Special Education setting of the observed lesson. Select all applicable settings."] <- "d75"
# names(all_fdi)[names(all_fdi) == "N/A:If applicable, please identify the Special Education setting of the observed lesson. Select all applicable settings."] <- "other_sped_setting"
# #			ii. Ensure ratings (developing, effective, etc.) are strings
# 1) Need to be numeric for LM
# a) Could have sep vector for numeric rating for descriptive statistics
# 2) Can also get mode to show where distribution lies--MG never offers a specific average for FDI
# a) Think about it more as a grading curve
# Can also do ANOVA test for significance of relationship between a numeric and string variable
#join final_pst_ratings, end_of_pst_ratings_detail, and all_fdi
#use currentsummativescore, not finalsummativescore for more complete cases
end_of_pst_ratings_detail <- end_of_pst_ratings_detail %>%
rename(tt2id = tt2_id)
all_fellow_data <- left_join(final_pst_ratings, end_of_pst_ratings_detail, by = "tt2id")
all_fellow_data <- left_join(all_fellow_data, all_fdi)
all_fellow_data <-filter(all_fellow_data, `currentstatus` ==  "Enrolled")
all_fellow_data <- all_fellow_data %>% drop_na(currentsummativescore)
all_fellow_data <-filter (all_fellow_data, `currentsummativescore` !=  "Not all ratings have been entered")
all_fellow_data <- all_fellow_data %>% drop_na(effectiveness)
# ratings_dist_dom1a <- all_fdi %>%
#   group_by(mar_dom1a) %>%
#   summarize(count = n()) %>%
#   mutate(percent = count / sum(count)*100) %>%
#   select(mar_dom1a, percent, count) # choose and reorder columns
#
# ratings_dist_dom1c <- all_fdi %>%
#   group_by(mar_dom1c) %>%
#   summarize(count = n()) %>%
#   mutate(percent = count / sum(count)*100) %>%
#   select(mar_dom1c, percent, count) # choose and reorder columns
#
# ratings_dist_dom1e <- all_fdi %>%
#   group_by(mar_dom1e) %>%
#   summarize(count = n()) %>%
#   mutate(percent = count / sum(count)*100) %>%
#   select(mar_dom1e, percent, count) # choose and reorder columns
#
# ratings_dist_dom2b <- all_fdi %>%
#   group_by(mar_dom2b) %>%
#   summarize(count = n()) %>%
#   mutate(percent = count / sum(count)*100) %>%
#   select(mar_dom2b, percent, count) # choose and reorder columns
#
# ratings_dist_dom2c <- all_fdi %>%
#   group_by(mar_dom2c) %>%
#   summarize(count = n()) %>%
#   mutate(percent = count / sum(count)*100) %>%
#   select(mar_dom2c, percent, count) # choose and reorder columns
#
# ratings_dist_dom2d <- all_fdi %>%
#   group_by(mar_dom2d) %>%
#   summarize(count = n()) %>%
#   mutate(percent = count / sum(count)*100) %>%
#   select(mar_dom2d, percent, count) # choose and reorder columns
#
# ratings_dist_dom3b <- all_fdi %>%
#   group_by(mar_dom3b) %>%
#   summarize(count = n()) %>%
#   mutate(percent = count / sum(count)*100) %>%
#   select(mar_dom3b, percent, count) # choose and reorder columns
#
# ratings_dist_dom3c <- all_fdi %>%
#   group_by(mar_dom3c) %>%
#   summarize(count = n()) %>%
#   mutate(percent = count / sum(count)*100) %>%
#   select(mar_dom3c, percent, count) # choose and reorder columns
#
# ratings_dist_dom3d <- all_fdi %>%
#   group_by(mar_dom3d) %>%
#   summarize(count = n()) %>%
#   mutate(percent = count / sum(count)*100) %>%
#   select(mar_dom3d, percent, count) # choose and reorder columns
#
# ratings_dist_dom4a <- all_fdi %>%
#   group_by(mar_dom4a) %>%
#   summarize(count = n()) %>%
#   mutate(percent = count / sum(count)*100) %>%
#   select(mar_dom4a, percent, count) # choose and reorder columns
#
# ratings_dist_effectiveness <- all_fdi %>%
#   group_by(effectiveness) %>%
#   summarize(count = n()) %>%
#   mutate(percent = count / sum(count)*100) %>%
#   select(effectiveness, percent, count) # choose and reorder columns
#
#
# ratings_dist_effectiveness_2016 <- all_fdi_2016 %>%
#   group_by(`How effective do you believe this Fellow is compared to other teachers with similar experience (eg- first year Fellows compared to other first year teachers)?`) %>%
#   summarize(count = n()) %>%
#   mutate(percent = count / sum(count)*100) %>%
#   select(`How effective do you believe this Fellow is compared to other teachers with similar experience (eg- first year Fellows compared to other first year teachers)?`, percent, count) # choose and reorder columns
all_fellow_data$currentsummativescore <- as.numeric(as.character(all_fellow_data$currentsummativescore))
ggplot(all_fellow_data, aes(x = currentsummativescore)) +
geom_histogram(binwidth=.05) +
labs(title = "Distribution of Final PST Ratings") +
theme_minimal()
#either transform data to fall into ranges of ratings, cutoff ranges (e.g. 2.26-2.3 is 2.3)
all_fellow_data$currentsummativescore <- as.numeric(as.character(all_fellow_data$currentsummativescore))
#for linear modeling, change back to string for descriptives or run descriptives first
all_fellow_data[all_fellow_data== "Highly Effective"] <- 6
all_fellow_data[all_fellow_data=="Effective+"] <- 5
all_fellow_data[all_fellow_data== "Effective"] <- 4
all_fellow_data[all_fellow_data== "Developing+"] <- 3
all_fellow_data[all_fellow_data== "Developing"] <- 2
all_fellow_data[all_fellow_data== "Ineffective"] <- 1
all_fellow_data[all_fellow_data== "Top 10%"] <- 4
all_fellow_data[all_fellow_data== "Above Average"] <- 3
all_fellow_data[all_fellow_data== "Average"] <- 2
all_fellow_data[all_fellow_data== "Below Average"] <- 1
all_fellow_data$effectiveness <- as.numeric(as.character(all_fellow_data$effectiveness))
# ggplot(all_fellow_data, aes(x = effectiveness, y = count)) +
#   geom_point() +
#   labs(title = "Distribution of FDI Effectiveness") +
#   theme_minimal()
mod1 = lm(all_fellow_data$mar_dom1a ~ all_fellow_data$effectiveness)
summary(mod1)
ggplot(all_fellow_data, aes(x = mar_dom1a, y = effectiveness)) +
geom_point() +
geom_jitter(alpha = .3) +
geom_smooth(method = "lm", formula = y~x) +
labs(x = "Dom 1A", y = "Effectiveness") +
theme_light()
#final PST summative scores as compared to FDI effectiveness ratings
mod2 = lm(all_fellow_data$currentsummativescore ~ all_fellow_data$effectiveness)
summary(mod2)
ggplot(all_fellow_data, aes(x = effectiveness, y = currentsummativescore)) +
geom_point() +
geom_jitter(alpha = .3) +
geom_smooth(method = "lm", formula = y~x) +
labs(x = "FDI Effectiveness", y = "Final PST Score")
for_cor <- select (all_fellow_data, effectiveness, currentsummativescore, round1, round2, round3, anchortechaveragehighestfor, nonanchortechniqueaverage, mar_dom1a, mar_dom1c, mar_dom1e, mar_dom2b, mar_dom2c, mar_dom2d, mar_dom3b, mar_dom3c, mar_dom3d, mar_dom4a)
for_cor <- as.numeric(for_cor)
for_cor <- for_cor %>%
as.numeric(as.character(effectiveness))
for_cor <- for_cor %>%
as.numeric(effectiveness)
View(for_cor)
for_cor <- for_cor %>%
as.numeric(for_cor$effectiveness)
for_cor$effectiveness <- as.numeric(as.character(for_cor$effectiveness))
all_fellow_data$effectiveness <- as.numeric(as.character(all_fellow_data$effectiveness))
all_fellow_data$round1 <- as.numeric(as.character(all_fellow_data$round1))
all_fellow_data$round2 <- as.numeric(as.character(all_fellow_data$round2))
all_fellow_data$round3 <- as.numeric(as.character(all_fellow_data$round3))
all_fellow_data$anchortechaveragehighestfor <- as.numeric(as.character(all_fellow_data$anchortechaveragehighestfor))
all_fellow_data$nonanchortechniqueaverage <- as.numeric(as.character(all_fellow_data$nonanchortechniqueaverage))
all_fellow_data$mar_dom1a <- as.numeric(as.character(all_fellow_data$mar_dom1a))
all_fellow_data$mar_dom1c <- as.numeric(as.character(all_fellow_data$mar_dom1c))
all_fellow_data$mar_dom1e <- as.numeric(as.character(all_fellow_data$mar_dom1e))
all_fellow_data$mar_dom2b <- as.numeric(as.character(all_fellow_data$mar_dom2b))
all_fellow_data$mar_dom2c <- as.numeric(as.character(all_fellow_data$mar_dom2c))
all_fellow_data$mar_dom2d <- as.numeric(as.character(all_fellow_data$mar_dom2d))
all_fellow_data$mar_dom3b <- as.numeric(as.character(all_fellow_data$mar_dom3b))
all_fellow_data$mar_dom3c <- as.numeric(as.character(all_fellow_data$mar_dom3c))
all_fellow_data$mar_dom3d <- as.numeric(as.character(all_fellow_data$mar_dom3d))
all_fellow_data$mar_dom4a <- as.numeric(as.character(all_fellow_data$mar_dom4a))
#load packages
library(pacman)
p_load(readxl, readr, dplyr, janitor, tidyr, stringr, ggplot2, data.table, knitr, scales, psych, Hmisc, corrplot)
# Aggregating Steps:
#   1. Load all datasets and packages
# 2. Filter out Cohort 27 observations for "which cohort" column, only Cohort 28 observations left
# 3. Filter out unnecessary columns in all datasets
# a. FDI data--keep: response ID, status, FC ID, cohort, 5 digit ID 28, DBN, grades, CCT/ICT, SC, SETSS, D75, fellow assigned SA, obs date, 1a, 1c, 1e, comments, 2b, 2c, 2d, comments, 3b, 3c, 3d, comments, 4a, comments, effective
# i. Create a business rule for grades that pulls in the numbers to one column?--discuss if this is possible with Robert
# 1) Group by grade bands (lower elem/upper elem, middle, high) and pull 0/1 or y/n into a column with the grade band as a header (ask Jake for existing code)
# a) **look out for ENL teachers who teach across K-12
# i) This doesn’t actually come up in analysis
# ii. Ensure ratings (developing, effective, etc.) are strings
# 1) Need to be numeric for LM
# a) Could have sep vector for numeric rating for descriptive statistics
# 2) Can also get mode to show where distribution lies--MG never offers a specific average for FDI
# a) Think about it more as a grading curve
# 3) Can also do ANOVA test for significance of relationship between a numeric and string variable
# 4. Join NHF and Vacancy List
# a. keep only: NHF--jobID, effective date, employee ID, name, email, phone; Vacancy List--effective date, jobID, current location
# 5. Rename all 5 digit column codes to "fellow_code"
# a. Join all datasets by this variable
#
# Business rules for cleaned data
# • All lowercase
# • mar_dom1a, mar_dom2a, mar_dom3b for domains for FDI
# TT2ID
# prin_column name for principal survey column names
# MG errs on the side of keeping variables in dataset, rather than removing
#load datasets
#FDI observation data for City, BC, Pace
#5 digit Fellow code crosswalk
#principal survey data
#EOT obseration ratings
#Fellow observation rating tracker (just the sheets "techniques detail" and "observation ratings detail")
#Vacancy list 11/30/16
#NHF 4/5/17
bc_fdi <- read_csv ("bc_fdi.csv")
pace_fdi <- read_csv ("pace_fdi.csv")
city_fdi <- read_csv ("city_fdi.csv")
fellow_code_crosswalk <- read_csv ("fellow_code_crosswalk.csv")
principal_survey_data <- read_csv ("principal_survey_data.csv")
end_of_pst_ratings_detail <- read_csv ("end_of_pst_ratings_detail.csv")
final_pst_ratings <- read_csv("final_pst_ratings.csv")
technique_ratings <- read_csv ("technique_ratings.csv")
vacancy_list <- read_csv("vacancy_list_113016.csv")
nhf <- read_csv("nhf.csv")
june_2016_pst_ratings <-read_csv("june_2016_pst_final_ratings.csv")
june_2016_pst_ratings <- june_2016_pst_ratings %>%
clean_names()
end_of_pst_ratings_detail <- end_of_pst_ratings_detail %>%
clean_names()
final_pst_ratings <- final_pst_ratings %>%
clean_names()
# Filter out Cohort 27 observations for "which cohort" column in all FDI datasets, add to sep dataset for comparison, then keep only Cohort 28 observations in all dataframe, complete cases as well
#checked against original excel files, all have correct number of cases
#before joining all fdi datasets together, need to create a column in each fdi dataset that signifies the university
bc_fdi_2016<-filter(bc_fdi, `Which cohort is this Fellow a member of?` ==  "Cohort 27")
bc_fdi_2016<-filter(bc_fdi_2016, `Status` ==  "Complete") %>%
mutate(university="BC")
city_fdi_2016<-filter(city_fdi, `Which cohort is this Fellow a member of?` ==  "Cohort 27")
city_fdi_2016<-filter(city_fdi_2016, `Status` ==  "Complete") %>%
mutate(university="City")
pace_fdi_2016<-filter(pace_fdi, `Which cohort is this Fellow a member of?` ==  "Cohort 27")
pace_fdi_2016<-filter(pace_fdi_2016, `Status` ==  "Complete") %>%
mutate(university="Pace")
all_fdi_2016 <- rbind(pace_fdi_2016, city_fdi_2016)
all_fdi_2016 <- rbind(all_fdi_2016, bc_fdi_2016)
bc_fdi<-filter(bc_fdi, `Which cohort is this Fellow a member of?` ==  "Cohort 28")
bc_fdi<-filter(bc_fdi, `Status` ==  "Complete") %>%
mutate(university="BC")
city_fdi<-filter(city_fdi, `Which cohort is this Fellow a member of?` ==  "Cohort 28")
city_fdi<-filter(city_fdi, `Status` ==  "Complete") %>%
mutate(university="City")
pace_fdi<-filter(pace_fdi, `Which cohort is this Fellow a member of?` ==  "Cohort 28")
pace_fdi<-filter(pace_fdi, `Status` ==  "Complete") %>%
mutate(university="Pace")
#join all fdi data together into one larger dataset using rbind (as all variables are same)
#then join with crosswalk of Fellow codes to we have their appid (change variables to have same name first)
all_fdi <- rbind(pace_fdi, city_fdi)
all_fdi <- rbind(all_fdi, bc_fdi)
names(all_fdi)[names(all_fdi) == "Please select the Cohort 28 Fellow ID that corresponds to the Fellow you observed."] <- "fellow_id"
names(fellow_code_crosswalk)[names(fellow_code_crosswalk) == "Six- Digit ID"] <- "fellow_id"
all_fdi <- left_join (all_fdi, fellow_code_crosswalk, by = "fellow_id")
names(all_fdi)[names(all_fdi) == "APP USER ID"] <- "tt2id"
#all_fdi now includes school code and appid from fellow_code_crosswalk, no missing cases, all have appid
#remove columns that include survey access data (keep school DBN column to confirm it is the same school, but reference School Code, as this column follows the 00X000 format)
#remove comments columns!
all_fdi <- all_fdi[, !(colnames(all_fdi) %in% c("Referer","Extended Referer","Language", "SessionID", "User Agent", "Extended User Agent", "Tags", "IP Address", "Contact ID", "Legacy Comments", "Longitude", "Latitude", "Country", "City", "State/Region", "Postal", "Time Started", "Comments", "URL Redirect", "Please select the Cohort 27 Fellow ID that corresponds to the Fellow you observed."))]
#change fdi ratings column headings to match Megan's business rules (see line 28)
all_fdi <- all_fdi %>%
clean_names()
all_fdi <- all_fdi %>%
rename(mar_dom1a = x1a_please_record_your_observation_rating_for_component_1a_demonstrating_knowledge_of_content_and_pedagogy,
mar_dom1c = x1c_please_record_your_observation_rating_for_component_1c_setting_instructional_outcomes,
mar_dom1e = x1e_please_record_your_observation_rating_for_component_1e_designing_coherent_instruction, mar_dom2b = x2b_please_record_your_observation_rating_for_component_2b_establishing_a_culture_for_learning,
mar_dom2c = x2c_please_record_your_observation_rating_for_component_2c_managing_classroom_procedures,
mar_dom2d = x2d_please_record_your_observation_rating_for_component_2d_managing_student_behavior,
mar_dom3b = x3b_please_record_your_observation_rating_for_component_3b_using_questioning_and_discussion_techniques,
mar_dom3c = x3c_please_record_your_observation_rating_for_component_3c_engaging_students_in_learning,
mar_dom3d = x3d_please_record_your_observation_rating_for_component_3d_using_assessment_in_instruction,
mar_dom4a = x4a_please_record_your_observation_rating_for_component_4a_reflecting_on_teaching,
cohort = which_cohort_is_this_fellow_a_member_of,
effectiveness = how_effective_do_you_believe_this_fellow_is_compared_to_other_teachers_with_similar_experience_eg_first_year_fellows_compared_to_other_first_year_teachers,
subject = what_is_the_fellow_s_assigned_university_subject_area_please_select_the_subject_they_are_training_in_at_their_university_not_the_subject_they_are_teaching_during_this_observation,
other_sped_setting = n_a_if_applicable_please_identify_the_special_education_setting_of_the_observed_lesson_select_all_applicable_settings,
d75 = d75_if_applicable_please_identify_the_special_education_setting_of_the_observed_lesson_select_all_applicable_settings,
setts = setts_if_applicable_please_identify_the_special_education_setting_of_the_observed_lesson_select_all_applicable_settings,
self_contained = self_contained_if_applicable_please_identify_the_special_education_setting_of_the_observed_lesson_select_all_applicable_settings,
cct_ict = ctt_ict_if_applicable_please_identify_the_special_education_setting_of_the_observed_lesson_select_all_applicable_settings)
# #************Field consultant ID and subject areacolumns not changing--why? changed to clean version and it worked, so leaving this here as a reminder
## can also rename columns when selecting them [select(new_name = old_name)]
## read_csv(aasdfasdfhjaksdf, col_names =
# names(all_fdi)[names(all_fdi) == "1a: :Please record your observation rating for component 1a: Demonstrating Knowledge of Content and Pedagogy."] <- "mar_dom1a"
# names(all_fdi)[names(all_fdi) == "1c::Please record your observation rating for component 1c: Setting Instructional Outcomes."] <- "mar_dom1c"
# names(all_fdi)[names(all_fdi) == "1e::Please record your observation rating for component 1e: Designing Coherent Instruction."] <- "mar_dom1e"
# names(all_fdi)[names(all_fdi) == "2b: :Please record your observation rating for component 2b: Establishing a Culture for Learning."] <- "mar_dom2b"
# names(all_fdi)[names(all_fdi) == "2c::Please record your observation rating for component 2c: Managing Classroom Procedures."] <- "mar_dom2c"
# names(all_fdi)[names(all_fdi) == "2d::Please record your observation rating for component 2d: Managing Student Behavior."] <- "mar_dom2d"
# names(all_fdi)[names(all_fdi) == "3b::Please record your observation rating for component 3b: Using Questioning and Discussion Techniques."] <- "mar_dom3b"
# names(all_fdi)[names(all_fdi) == "3c::Please record your observation rating for component 3c: Engaging Students in Learning."] <- "mar_dom3c"
# names(all_fdi)[names(all_fdi) == "3d::Please record your observation rating for component 3d: Using Assessment in Instruction."] <- "mar_dom3d"
# names(all_fdi)[names(all_fdi) == "4a::Please record your observation rating for component 4a: Reflecting on Teaching."] <- "mar_dom4a"
# names(all_fdi)[names(all_fdi) == "How effective do you believe this Fellow is compared to other teachers with similar experience (eg- first year Fellows compared to other first year teachers)?"] <- "effectiveness_compared_to_other_teachers"
# names(all_fdi)[names(all_fdi) == "Comments for Domain 1"] <- "dom1_comments"
# names(all_fdi)[names(all_fdi) == "Comments for Domain 2"] <- "dom2_comments"
# names(all_fdi)[names(all_fdi) == "Comments for Domain 3"] <- "dom3_comments"
# names(all_fdi)[names(all_fdi) == "Comments for Domain 4"] <- "dom4_comments"
# names(all_fdi)[names(all_fdi) == "What is the Fellow's assigned university subject area? (Please select the subject they are training in at their university, NOT the subject they are teaching during this observation.)"] <- "fellow_subject_area"
# names(all_fdi)[names(all_fdi) == "What was the date of this observation?"] <- "observation_date"
# names(all_fdi)[names(all_fdi) == "Please select your Field Consultant ID."] <- "field_consultant_id"
# names(all_fdi)[names(all_fdi) == "Which cohort is this Fellow a member of?"] <- "cohort"
# names(all_fdi)[names(all_fdi) == "Please enter the school DBN as a letter and 3-digit number (e.g. X232 or K021)"] <- "DBN"
# names(all_fdi)[names(all_fdi) == "CTT/ICT:If applicable, please identify the Special Education setting of the observed lesson. Select all applicable settings."] <- "cct_ict"
# names(all_fdi)[names(all_fdi) == "Self-contained:If applicable, please identify the Special Education setting of the observed lesson. Select all applicable settings."] <- "self_contained"
# names(all_fdi)[names(all_fdi) == "SETTS:If applicable, please identify the Special Education setting of the observed lesson. Select all applicable settings."] <- "setts"
# names(all_fdi)[names(all_fdi) == "D75:If applicable, please identify the Special Education setting of the observed lesson. Select all applicable settings."] <- "d75"
# names(all_fdi)[names(all_fdi) == "N/A:If applicable, please identify the Special Education setting of the observed lesson. Select all applicable settings."] <- "other_sped_setting"
# #			ii. Ensure ratings (developing, effective, etc.) are strings
# 1) Need to be numeric for LM
# a) Could have sep vector for numeric rating for descriptive statistics
# 2) Can also get mode to show where distribution lies--MG never offers a specific average for FDI
# a) Think about it more as a grading curve
# Can also do ANOVA test for significance of relationship between a numeric and string variable
#join final_pst_ratings, end_of_pst_ratings_detail, and all_fdi
#use currentsummativescore, not finalsummativescore for more complete cases
end_of_pst_ratings_detail <- end_of_pst_ratings_detail %>%
rename(tt2id = tt2_id)
all_fellow_data <- left_join(final_pst_ratings, end_of_pst_ratings_detail, by = "tt2id")
all_fellow_data <- left_join(all_fellow_data, all_fdi)
all_fellow_data <-filter(all_fellow_data, `currentstatus` ==  "Enrolled")
all_fellow_data <- all_fellow_data %>% drop_na(currentsummativescore)
all_fellow_data <-filter (all_fellow_data, `currentsummativescore` !=  "Not all ratings have been entered")
all_fellow_data <- all_fellow_data %>% drop_na(effectiveness)
#distribution of final summative PST scores
all_fellow_data$currentsummativescore <- as.numeric(as.character(all_fellow_data$currentsummativescore))
ggplot(all_fellow_data, aes(x = currentsummativescore)) +
geom_histogram(binwidth=.05) +
labs(title = "Distribution of Final PST Ratings") +
theme_minimal()
#either transform data to fall into ranges of ratings, cutoff ranges (e.g. 2.26-2.3 is 2.3)
all_fellow_data$currentsummativescore <- as.numeric(as.character(all_fellow_data$currentsummativescore))
#for linear modeling, change back to string for descriptives or run descriptives first
all_fellow_data[all_fellow_data== "Highly Effective"] <- 6
all_fellow_data[all_fellow_data=="Effective+"] <- 5
all_fellow_data[all_fellow_data== "Effective"] <- 4
all_fellow_data[all_fellow_data== "Developing+"] <- 3
all_fellow_data[all_fellow_data== "Developing"] <- 2
all_fellow_data[all_fellow_data== "Ineffective"] <- 1
all_fellow_data[all_fellow_data== "Top 10%"] <- 4
all_fellow_data[all_fellow_data== "Above Average"] <- 3
all_fellow_data[all_fellow_data== "Average"] <- 2
all_fellow_data[all_fellow_data== "Below Average"] <- 1
all_fellow_data$effectiveness <- as.numeric(as.character(all_fellow_data$effectiveness))
all_fellow_data$round1 <- as.numeric(as.character(all_fellow_data$round1))
all_fellow_data$round2 <- as.numeric(as.character(all_fellow_data$round2))
all_fellow_data$round3 <- as.numeric(as.character(all_fellow_data$round3))
all_fellow_data$anchortechaveragehighestfor <- as.numeric(as.character(all_fellow_data$anchortechaveragehighestfor))
all_fellow_data$nonanchortechniqueaverage <- as.numeric(as.character(all_fellow_data$nonanchortechniqueaverage))
all_fellow_data$mar_dom1a <- as.numeric(as.character(all_fellow_data$mar_dom1a))
all_fellow_data$mar_dom1c <- as.numeric(as.character(all_fellow_data$mar_dom1c))
all_fellow_data$mar_dom1e <- as.numeric(as.character(all_fellow_data$mar_dom1e))
all_fellow_data$mar_dom2b <- as.numeric(as.character(all_fellow_data$mar_dom2b))
all_fellow_data$mar_dom2c <- as.numeric(as.character(all_fellow_data$mar_dom2c))
all_fellow_data$mar_dom2d <- as.numeric(as.character(all_fellow_data$mar_dom2d))
all_fellow_data$mar_dom3b <- as.numeric(as.character(all_fellow_data$mar_dom3b))
all_fellow_data$mar_dom3c <- as.numeric(as.character(all_fellow_data$mar_dom3c))
all_fellow_data$mar_dom3d <- as.numeric(as.character(all_fellow_data$mar_dom3d))
all_fellow_data$mar_dom4a <- as.numeric(as.character(all_fellow_data$mar_dom4a))
mod1 = lm(all_fellow_data$mar_dom1a ~ all_fellow_data$effectiveness)
summary(mod1)
ggplot(all_fellow_data, aes(x = mar_dom1a, y = effectiveness)) +
geom_point() +
geom_jitter(alpha = .3) +
geom_smooth(method = "lm", formula = y~x) +
labs(x = "Dom 1A", y = "Effectiveness") +
theme_light()
#final PST summative scores as compared to FDI effectiveness ratings
mod2 = lm(all_fellow_data$currentsummativescore ~ all_fellow_data$effectiveness)
summary(mod2)
ggplot(all_fellow_data, aes(x = effectiveness, y = currentsummativescore)) +
geom_point() +
geom_jitter(alpha = .3) +
geom_smooth(method = "lm", formula = y~x) +
labs(x = "FDI Effectiveness", y = "Final PST Score")
for_cor <- select (all_fellow_data, effectiveness, currentsummativescore, round1, round2, round3, anchortechaveragehighestfor, nonanchortechniqueaverage, mar_dom1a, mar_dom1c, mar_dom1e, mar_dom2b, mar_dom2c, mar_dom2d, mar_dom3b, mar_dom3c, mar_dom3d, mar_dom4a)
coretest_2 <- cor(for_cor)
cortest_2 <- cor(for_cor)
corrplot(cortest_2, method="number")
corrplot(cortest_2, method="shade")
View(cortest_2)
for_cor <- for_cor %>% drop_na(for_cor)
for_cor <- for_cor %>% drop_na(effectiveness, currentsummativescore, round1, round2, round3, anchortechaveragehighestfor, nonanchortechniqueaverage, mar_dom1a, mar_dom1c, mar_dom1e, mar_dom2b, mar_dom2c, mar_dom2d, mar_dom3b, mar_dom3c, mar_dom3d, mar_dom4a)
cortest_2 <- cor(for_cor)
corrplot(cortest_2, method="shade")
corrplot(cortest_2, method="number")
cortest <- cor(for_cor)
corrplot(cortest, method="number")
corrplot1 <- corrplot(cortest, method="number")
write_csv(corrplot1, "corrmatrix1.csv")
for_cor2 <- select (all_fellow_data, effectiveness, currentsummativescore, mar_dom1a, mar_dom1c, mar_dom1e, mar_dom2b, mar_dom2c, mar_dom2d, mar_dom3b, mar_dom3c, mar_dom3d, mar_dom4a)
for_cor2 <- for_cor2 %>% drop_na(effectiveness, currentsummativescore, mar_dom1a, mar_dom1c, mar_dom1e, mar_dom2b, mar_dom2c, mar_dom2d, mar_dom3b, mar_dom3c, mar_dom3d, mar_dom4a)
cortest2 <- cor(for_cor2)
corrplot2 <- corrplot(cortest2, method="number")
