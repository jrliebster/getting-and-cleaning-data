p.mat = cor.mtest(domain_cor,0.95)[[1]],
sig.level=0.05,
method="number")
fyi_pip_cor <- all_fellow_data %>%
ungroup() %>%
select (dom2_dom3_avg, currentsummativescore, count_fyi, rrpipsubmitted11, anchortechaveragehighestfor, nonanchortechniqueaverage)
fyi_pip_cor <- fyi_pip_cor %>%drop_na(dom2_dom3_avg, currentsummativescore, count_fyi, rrpipsubmitted11, anchortechaveragehighestfor, nonanchortechniqueaverage)
fyi_pip_corplot1 <- corrplot(cor(fyi_pip_cor),
p.mat = cor.mtest(fyi_pip_cor,0.95)[[1]],
sig.level=0.05,
method="number")
pst_indicators_cor <- all_fellow_data %>%
ungroup() %>%
select (x100percent, what_to_do, strong_voice, positive_framing, anchor_highest_formal_average, engineer_efficiency, strong_start, cold_call, stretch_it, control_the_game, everybody_writes, non_anchor_highest_formal_average, effectiveness, currentsummativescore)
pst_indicators_cor <- pst_indicators_cor %>%drop_na(x100percent, what_to_do, strong_voice, positive_framing, anchor_highest_formal_average, engineer_efficiency, strong_start, cold_call, stretch_it, control_the_game, everybody_writes, non_anchor_highest_formal_average, effectiveness, currentsummativescore)
pst_indicators_corplot1 <- corrplot(cor(pst_indicators_cor),
p.mat = cor.mtest(pst_indicators_cor,0.95)[[1]],
sig.level=0.05,
method="number")
pst_2016_cor <- all_2016_fellow_data %>%
ungroup() %>%
select (anchor_technique_average, non_anchor_technique_average,current_summative_score, oct_rel_effect, pst_quartile)
pst_2016_cor <- pst_2016_cor %>%drop_na(anchor_technique_average, non_anchor_technique_average,current_summative_score, oct_rel_effect, pst_quartile)
pst_2016_corplot1 <- corrplot(cor(pst_2016_cor),
p.mat = cor.mtest(pst_2016_cor,0.95)[[1]],
sig.level=0.05,
method="number")
rounds_cor <- all_fellow_data %>%
ungroup() %>%
select (anchor_highest_formal_average, non_anchor_highest_formal_average, round1, round2, round3, effectiveness, currentsummativescore)
rounds_cor <- rounds_cor %>%drop_na(anchor_highest_formal_average, non_anchor_highest_formal_average, round1, round2, round3, effectiveness, currentsummativescore)
rounds_corplot1 <- corrplot(cor(rounds_cor),
p.mat = cor.mtest(rounds_cor,0.95)[[1]],
sig.level=0.05,
method="number")
indicators_domains_cor <- all_fellow_data %>%
ungroup() %>%
select (x100percent, what_to_do, strong_voice, positive_framing, engineer_efficiency, strong_start, cold_call, stretch_it, control_the_game, everybody_writes,  mar_dom1a, mar_dom1c, mar_dom1e, mar_dom2b, mar_dom2c, mar_dom2d, mar_dom3b, mar_dom3c, mar_dom3d, mar_dom4a)
indicators_domains_cor <- indicators_domains_cor %>%drop_na(x100percent, what_to_do, strong_voice, positive_framing, engineer_efficiency, strong_start, cold_call, stretch_it, control_the_game, everybody_writes,  mar_dom1a, mar_dom1c, mar_dom1e, mar_dom2b, mar_dom2c, mar_dom2d, mar_dom3b, mar_dom3c, mar_dom3d, mar_dom4a)
indicators_domains_corplot1 <- corrplot(cor(indicators_domains_cor),
p.mat = cor.mtest(indicators_domains_cor,0.95)[[1]],
sig.level=0.05,
method="number")
for_cor_non_anchor <- all_fellow_data %>%
ungroup() %>%
select (engineer_efficiency, strong_start, cold_call, stretch_it, control_the_game, everybody_writes,  mar_dom1a, mar_dom1c, mar_dom1e, mar_dom2b, mar_dom2c, mar_dom2d, mar_dom3b, mar_dom3c, mar_dom3d, mar_dom4a)
for_cor_non_anchor <- for_cor_non_anchor %>% drop_na(engineer_efficiency, strong_start, cold_call, stretch_it, control_the_game, everybody_writes,  mar_dom1a, mar_dom1c, mar_dom1e, mar_dom2b, mar_dom2c, mar_dom2d, mar_dom3b, mar_dom3c, mar_dom3d, mar_dom4a)
non_anchor_corplot1 <- corrplot(cor(for_cor_non_anchor),
p.mat = cor.mtest(for_cor_non_anchor,0.95)[[1]],
sig.level=0.05,
method="number")
for_cor_anchor <- all_fellow_data %>%
ungroup() %>%
select (x100percent, what_to_do, strong_voice, positive_framing, mar_dom1a, mar_dom1c, mar_dom1e, mar_dom2b, mar_dom2c, mar_dom2d, mar_dom3b, mar_dom3c, mar_dom3d, mar_dom4a)
for_cor_anchor <- for_cor_anchor %>% drop_na(x100percent, what_to_do, strong_voice, positive_framing, mar_dom1a, mar_dom1c, mar_dom1e, mar_dom2b, mar_dom2c, mar_dom2d, mar_dom3b, mar_dom3c, mar_dom3d, mar_dom4a)
anchor_corplot1 <- corrplot(cor(for_cor_anchor),
p.mat = cor.mtest(for_cor_anchor,0.95)[[1]],
sig.level=0.05,
method="number")
coach_ratings <- coach_ratings %>%
select(coachname, level, returner) %>%
filter(!is.na(coachname))
#change last, first to first last name
coach_ratings$coachname <- sub("(\\w+),\\s(\\w+)","\\2 \\1", coach_ratings$coachname)
coach_ratings$coachname[coach_ratings$coachname=="Lori Lowe-Ann"] <- "Lori-Ann Lowe"
coach_ratings$coachname[coach_ratings$coachname=="Ravit-Lauren Franceskin"] <- "Lauren Ravit-Franceskin"
coach_ratings$level[coach_ratings$level=="Green"] <- 3
coach_ratings$level[coach_ratings$level=="Yellow"] <- 2
coach_ratings$level[coach_ratings$level=="Red"] <- 1
all_fellow_data <- left_join(all_fellow_data, coach_ratings)
all_fellow_data <- all_fellow_data[, !(colnames(all_fellow_data) %in% c("coach_name.x","curret_status.x","enrollee_name.x", "training_academy.x"))]
all_fellow_data$level <- as.numeric(as.character(all_fellow_data$level))
##need to group into PST ratings quartiles (do this after all datasets are joined)
pst_ratings_dist_d75 <- d75 %>%
group_by(pst_quartile) %>%
summarise(count = n()) %>%
mutate(percent = count / sum(count)) %>%
select(pst_quartile, percent, count)
pst_ratings_2016_dist_d75 <- d75_2016 %>%
group_by(pst_quartile) %>%
summarise(count = n()) %>%
mutate(percent = count / sum(count)) %>%
select(pst_quartile, percent, count)
#coretest_1 <- rcorr(as.matrix(all_fellow_data$effectiveness, all_fellow_data$currentsummativescore))
pst_ratings_dist_non_d75 <- non_d75 %>%
group_by(pst_quartile) %>%
summarise(count = n()) %>%
mutate(percent = count / sum(count)) %>%
select(pst_quartile, percent, count) # choose and reorder columns
#coretest_1 <- rcorr(as.matrix(all_fellow_data$effectiveness, all_fellow_data$currentsummativescore))
#group by TA (need to first group PST scores by quartile)
training_academy_ratings_dist <- all_fellow_data %>%
group_by(coachname, mean_effectiveness, pst_quartile) %>%
summarise(count = n()) %>%
select(coachname, mean_effectiveness, pst_quartile, count) %>%
slice(1)
pst_quartile_effectiveness <- all_fellow_data %>%
group_by(coachname, pst_quartile) %>%
summarise(mean_effectiveness = mean(effectiveness, na.rm = TRUE))
coach_ratings_dist <- all_fellow_data %>%
group_by(coachname, pst_quartile) %>%
summarise(count = n()) %>%
mutate(mean = mean(pst_quartile)) %>%
select(coachname, pst_quartile, mean, count) %>%
slice(1)
coach_effectiveness_dist <- all_fellow_data %>%
group_by(coachname, dom2_dom3_avg) %>%
summarise(count = n()) %>%
mutate(mean_effectiveness = mean(dom2_dom3_avg)) %>%
select(coachname, mean_effectiveness) %>%
slice(1)
pst_growth <- all_fellow_data %>%
group_by(growth_total, pst_quartile) %>%
summarise(count = n()) %>%
mutate(mean_growth = mean(growth_total)) %>%
select(growth_total, pst_quartile, mean_growth, count) # choose and reorder columns
coach_ta_scores <- all_fellow_data %>%
group_by(coachname, effectiveness, pst_quartile, round1, round2, round3) %>%
summarise(count = n()) %>%
mutate(mean_pst = mean(pst_quartile)) %>%
select(coachname, effectiveness, pst_quartile, round1, round2, round3, mean_pst, count) # choose and reorder columns
coach_growth <- all_fellow_data %>%
group_by(coachname, growth_total) %>%
summarise(count = n()) %>%
mutate(mean_growth = mean(growth_total)) %>%
select(coachname, growth_total, mean_growth, count) # choose and reorder columns
fdi_by_ta <- all_fellow_data %>%
group_by(dom2_dom3_avg, trainingacademy) %>%
summarise(count = n()) %>%
mutate(mean_effectiveness = mean(dom2_dom3_avg)) %>%
select(trainingacademy, mean_effectiveness)
for_cor_ta <- coach_ta_scores %>%
ungroup() %>%
select (effectiveness, pst_quartile, round1, round2, round3)
for_cor_ta <- for_cor_ta %>% drop_na(effectiveness, pst_quartile, round1, round2, round3)
ta_corplot1 <- corrplot(cor(for_cor_ta),
p.mat = cor.mtest(for_cor_ta,0.95)[[1]],
sig.level=0.05,
method="number")
#compared to June 2016 ratings (current_summative_score)
june_2016_pst_ratings %>%
summarise(meanpstscore = mean(current_summative_score, na.rm = TRUE))
pst_2016_bottom <-quantile(june_2016_pst_ratings$current_summative_score, .25, na.rm = TRUE)
pst_2016_median <-quantile(june_2016_pst_ratings$current_summative_score, .50, na.rm = TRUE)
pst_2016_top <- quantile(june_2016_pst_ratings$current_summative_score, .75, na.rm = TRUE)
june_2016_pst_ratings <- june_2016_pst_ratings %>%
mutate(pst_2016_quartile = ifelse(current_summative_score > pst_2016_top, 4,
ifelse(current_summative_score > pst_2016_median, 3,
ifelse(current_summative_score > pst_2016_bottom, 2, 1))))
pst_descriptives_2016 <- june_2016_pst_ratings %>%
drop_na(pst_2016_quartile) %>%
group_by(pst_2016_quartile) %>%
summarise(count = n()) %>%
mutate(percent = count / sum(count)) %>%
select(pst_2016_quartile, percent, count)
all_fellow_data %>%
ungroup() %>%
summarise(meanpstscore = mean(currentsummativescore, na.rm = TRUE))
pst_descriptives <- all_fellow_data %>%
drop_na(pst_quartile) %>%
group_by(pst_quartile) %>%
summarise(count = n()) %>%
mutate(percent = count / sum(count)) %>%
select(pst_quartile, percent, count)
all_fellow_data %>%
mutate(fyi_range = ifelse(count_fyi >= 5, 3, ifelse(count_fyi >= 1, 2, 1))) %>%
group_by(effectiveness, fyi_range) %>%
summarise(count = n()) %>%
select(effectiveness, fyi_range, count)
mean(all_fellow_data$anchortechaveragehighestfor)
mean(all_fellow_data$nonanchortechniqueaverage)
mean(all_2016_fellow_data$anchor_technique_average)
mean(all_2016_fellow_data$non_anchor_technique_average)
mean(all_fellow_data$round1)
mean(all_fellow_data$round2)
mean(all_fellow_data$round3)
all_2016_fellow_data <- all_2016_fellow_data %>% drop_na(week_2_fe_diagnostic, week_3_fe, week_4_fe, week_5_fe_obs_1, week_5_fe_obs_2)
all_2016_fellow_data$week_2_fe_diagnostic <- as.numeric(as.character(all_2016_fellow_data$week_2_fe_diagnostic))
all_2016_fellow_data$week_5_fe_obs_2 <- as.numeric(as.character(all_2016_fellow_data$week_5_fe_obs_2))
mean(all_2016_fellow_data$week_2_fe_diagnostic)
mean(all_2016_fellow_data$week_3_fe)
mean(all_2016_fellow_data$week_4_fe)
mean(all_2016_fellow_data$week_5_fe_obs_1)
mean(all_2016_fellow_data$week_5_fe_obs_2)
for_cor_principal_survey <- all_fellow_data %>%
ungroup() %>%
select (level, dom2_dom3_avg, pst_quartile, principal_effectiveness, currentsummativescore, observationaveragetodate, anchor_highest_formal_average, non_anchor_highest_formal_average)
for_cor_principal_survey <- for_cor_principal_survey %>% drop_na(level, dom2_dom3_avg, pst_quartile, principal_effectiveness)
principal_corplot1 <- corrplot(cor(for_cor_principal_survey),
p.mat = cor.mtest(for_cor_principal_survey,0.95)[[1]],
sig.level=0.05,
method="number")
principal_pst <- all_fellow_data %>%
group_by(principal_effectiveness, pst_quartile) %>%
summarise(count = n()) %>%
mutate(percent = count / sum(count)) %>%
select(principal_effectiveness, pst_quartile, percent) # choose and reorder columns
#look at principal survey planning and prep question
coach_level_pst <- all_fellow_data %>%
group_by(level, pst_quartile) %>%
summarise(count = n()) %>%
mutate(percent = count / sum(count)) %>%
select(level, pst_quartile, percent)
coach_level_fdi <- all_fellow_data %>%
group_by(level, effectiveness) %>%
summarise(count = n()) %>%
mutate(percent = count / sum(count)) %>%
select(level, effectiveness, percent)
coach_level_principal <- all_fellow_data %>%
group_by(level, principal_effectiveness) %>%
summarise(count = n()) %>%
mutate(percent = count / sum(count)) %>%
select(level, principal_effectiveness, percent)
coach_level_d75 <- all_fellow_data %>%
group_by(level, d75) %>%
drop_na(level) %>%
summarise(count = n()) %>%
coach_returning_d75 <- all_fellow_data %>%
group_by(returner, d75, pst_quartile) %>%
summarise(count = n()) %>%
select(returner, d75, pst_quartile, count)
mean(all_fellow_data$effectiveness)
table(all_fellow_data$effectiveness)
table(all_2016_fellow_data$oct_rel_effect)
#now compare vacancy date to performance
nhf <- nhf %>%
rename(job_id=jobid)
hiring_data <- left_join(nhf, vacancy_list, by = "job_id")
hiring_data <- hiring_data[, (colnames(hiring_data) %in% c("job_id", "eff_date", "name", "file_no", "effective_date", "phone", "email", "nomination_date"))]
hiring_data$name <- sub("(\\w+),\\s(\\w+)","\\2 \\1", hiring_data$name)
hiring_data <- hiring_data %>%
rename(enrolleename=name)
fellow_hiring_data <- left_join(hiring_data, all_fellow_data, by = "enrolleename")
fellow_hiring_data <- fellow_hiring_data %>%
filter(!is.na(currentstatus))
fellow_hiring_data$eff_date <- as.Date(fellow_hiring_data$eff_date, format = "%m/%d/%Y")
fellow_hiring_data$nomination_date <- as.Date(fellow_hiring_data$nomination_date, format = "%m/%d/%Y")
fellow_hiring_data <- fellow_hiring_data %>%
mutate(vacancy = ifelse(eff_date > "2016-09-06", "mid year",
ifelse(eff_date <= "2016-09-06", "start of year", eff_date)))
table(fellow_hiring_data$vacancy)
#break out D75 as a group
d75 <-filter(all_fellow_data, d75 ==  "D75")
non_d75 <- filter(all_fellow_data, is.na(d75))
d75_2016 <-filter(all_2016_fellow_data, oct_subject ==  "D75")
non_d75_2016 <- filter(all_2016_fellow_data, oct_subject != "D75")
d75_item<-filter(all_fellow_data, subject == "Special Education - D75")
non_d75_item<-filter(all_fellow_data, subject != "Special Education - D75")
d75_2016_item<-filter(all_2016_fellow_data, oct_subject == "D75")
non_d75_2016_item<-filter(all_2016_fellow_data, oct_subject != "D75")
effectiveness_dist_d75 <- d75 %>%
group_by(dom2_dom3_avg) %>%
summarise(count = n()) %>%
mutate(percent = count / sum(count)) %>%
select(dom2_dom3_avg, percent, count) # choose and reorder columns
effectiveness_dist_2016_d75 <- d75_2016 %>%
group_by(oct_dom2_dom3_avg) %>%
summarise(count = n()) %>%
mutate(percent = count / sum(count)) %>%
select(oct_dom2_dom3_avg, percent, count)
effectiveness_dist_non_d75 <- non_d75 %>%
group_by(dom2_dom3_avg) %>%
summarise(count = n()) %>%
mutate(percent = count / sum(count)) %>%
select(dom2_dom3_avg, percent, count)
effectiveness_dist_2016_non_d75 <- non_d75_2016 %>%
group_by(oct_dom2_dom3_avg) %>%
drop_na(oct_dom2_dom3_avg) %>%
summarise(count = n()) %>%
mutate(percent = count / sum(count)) %>%
select(oct_dom2_dom3_avg, percent, count)
d75_by_coach <- d75 %>%
group_by(coachname, pst_quartile) %>%
summarise(count = n()) %>%
mutate(percent = count / sum(count)) %>%
select(coachname, pst_quartile, count) %>%
slice(1)
subject_area_pst <- all_fellow_data %>%
group_by(subject, currentsummativescore) %>%
summarise(count = n()) %>%
mutate(mean = mean(currentsummativescore)) %>%
select(subject, mean) %>%
arrange(mean) %>%
slice(1)
subject_area_2016_pst <- all_2016_fellow_data %>%
group_by(oct_subject, current_summative_score) %>%
summarise(count = n()) %>%
mutate(mean = mean(current_summative_score)) %>%
select(oct_subject, mean) %>%
arrange(mean) %>%
slice(1)
subject_area_effectiveness <- all_fellow_data %>%
group_by(subject, dom2_dom3_avg) %>%
summarise(count = n()) %>%
mutate(mean = mean(dom2_dom3_avg)) %>%
select(subject, dom2_dom3_avg, mean, count) %>%
arrange(mean) %>%
slice(1)
effectiveness_sa <- all_fellow_data %>%
group_by(dom2_dom3_avg, subject) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(subject) %>%
mutate(percent_of_total = round((count/sum(count)*100), 2),
cumulative = round(cumsum(percent_of_total))) %>%
arrange(subject)
selection_and_fdi <- all_fellow_data %>%
group_by(rrteacherpresence23,rrteachingsampleoverall132,rrcriticalthinkingoverall27, dom2_dom3_avg) %>%
summarise(count = n()) %>%
#mutate(mean = mean(dom2_dom3_avg)) %>%
select(rrteacherpresence23,rrteachingsampleoverall132,rrcriticalthinkingoverall27, dom2_dom3_avg, count) %>%
filter(!is.na(dom2_dom3_avg))
aggregate(selection_and_fdi[, 4], list(selection_and_fdi$rrteacherpresence23), mean)
aggregate(selection_and_fdi[, 4], list(selection_and_fdi$rrteachingsampleoverall132), mean)
aggregate(selection_and_fdi[, 4], list(selection_and_fdi$rrcriticalthinkingoverall27), mean)
selection_and_fdi_2016 <- all_2016_fellow_data %>%
group_by(rrteacherpresence23,rrteachingsampleoverall132,rrcriticalthinkingoverall27, oct_dom2_dom3_avg) %>%
summarise(count = n()) %>%
select(rrteacherpresence23,rrteachingsampleoverall132,rrcriticalthinkingoverall27, oct_dom2_dom3_avg, count) %>%
filter(!is.na(oct_dom2_dom3_avg))
aggregate(selection_and_fdi_2016[, 4], list(selection_and_fdi_2016$rrteacherpresence23), mean)
aggregate(selection_and_fdi_2016[, 4], list(selection_and_fdi_2016$rrteachingsampleoverall132), mean)
aggregate(selection_and_fdi_2016[, 4], list(selection_and_fdi_2016$rrcriticalthinkingoverall27), mean)
nrow(selection_and_fdi[selection_and_fdi$rrteacherpresence23 == 0,])
nrow(selection_and_fdi[selection_and_fdi$rrteachingsampleoverall132 == 0,])
nrow(selection_and_fdi[selection_and_fdi$rrcriticalthinkingoverall27 == 0,])
nrow(selection_and_fdi_2016[selection_and_fdi_2016$rrteacherpresence23 == 0,])
nrow(selection_and_fdi_2016[selection_and_fdi_2016$rrteachingsampleoverall132 == 0,])
nrow(selection_and_fdi_2016[selection_and_fdi_2016$rrcriticalthinkingoverall27 == 0,])
mean(selection_and_fdi$dom2_dom3_avg [selection_and_fdi$rrteacherpresence23==1 & selection_and_fdi$rrteachingsampleoverall132==1 & selection_and_fdi$rrcriticalthinkingoverall27==1] , na.rm = TRUE)
mean(selection_and_fdi_2016$oct_dom2_dom3_avg [selection_and_fdi_2016$rrteacherpresence23==1 & selection_and_fdi_2016$rrteachingsampleoverall132==1 & selection_and_fdi_2016$rrcriticalthinkingoverall27==1], na.rm = TRUE)
all_fellow_data %>%
group_by(tt2id) %>%
mutate(diff= currentsummativescore - observationaveragetodate) %>%
ungroup(tt2id) %>%
summarise(mean(diff))
pst_quartile_effectiveness <- all_fellow_data %>%
group_by(coachname, pst_quartile) %>%
summarise(mean_effectiveness = mean(effectiveness, na.rm = TRUE))
View(pst_quartile_effectiveness)
View(coach_effectiveness_dist)
training_academy_ratings_dist <- all_fellow_data %>%
group_by(coachname, mean_effectiveness, pst_quartile) %>%
summarise(count = n()) %>%
select(coachname, mean_effectiveness, pst_quartile, count) %>%
slice(1)
training_academy_ratings_dist <- all_fellow_data %>%
mutate(mean_effectiveness = mean(dom2_dom3_avg)) %>%
group_by(coachname, mean_effectiveness, pst_quartile) %>%
summarise(count = n()) %>%
select(coachname, mean_effectiveness, pst_quartile, count) %>%
slice(1)
View(training_academy_ratings_dist)
coach_ratings_dist <- all_fellow_data %>%
group_by(coachname, pst_quartile) %>%
summarise(count = n()) %>%
mutate(mean = mean(pst_quartile)) %>%
select(coachname, pst_quartile, mean, count) %>%
slice(1)
coach_effectiveness_dist <- all_fellow_data %>%
group_by(coachname, dom2_dom3_avg) %>%
summarise(count = n()) %>%
mutate(mean_effectiveness = mean(dom2_dom3_avg)) %>%
select(coachname, mean_effectiveness) %>%
slice(1)
View(coach_effectiveness_dist)
pst_growth <- all_fellow_data %>%
group_by(growth_total, pst_quartile) %>%
summarise(count = n()) %>%
mutate(mean_growth = mean(growth_total)) %>%
select(growth_total, pst_quartile, mean_growth, count) # choose and reorder columns
View(pst_growth)
all_fellow_data %>%
group_by(coachname, growth_total) %>%
summarise(count = n()) %>%
mutate(mean_growth = mean(growth_total)) %>%
select(coachname, growth_total, mean_growth, count) # choose and reorder columns
fdi_by_ta <- all_fellow_data %>%
group_by(dom2_dom3_avg, trainingacademy) %>%
summarise(count = n()) %>%
mutate(mean_effectiveness = mean(dom2_dom3_avg)) %>%
select(trainingacademy, mean_effectiveness)
View(fdi_by_ta)
fdi_by_ta <- all_fellow_data %>%
group_by(dom2_dom3_avg, trainingacademy) %>%
summarise(count = n()) %>%
select(trainingacademy, dom2_dom3_avg)
View(fdi_by_ta)
View(pst_descriptives_2016)
View(principal_pst)
View(principal_pst)
principal_pst <- all_fellow_data %>%
group_by(principal_effectiveness, pst_quartile) %>%
summarise(count = n()) %>%
select(principal_effectiveness, pst_quartile)
View(coach_level_pst)
setwd("C:/Users/jules.liebster/Desktop/TNTP/NYCTF/R/Hiring Tracker - Copy")
#I want to aggregate the DOE's new hire file (NHF) with NYCTF's hiring commitment form information on TT2
#(any tab listed as "HCF data" includes only data from the HCF report in TT2)
# and pull the earliest date the Fellow stated they accepted an offer.
#There are often 3 dates (date entered in DOE payroll on new hire file, date hiring commitment form was submitted,
#and start date inputted by Fellow on hiring commitment form).
##comment out everything involving NHF for now, bring it back later
#load packages
library(pacman)
p_load(readxl, readr, dplyr, janitor, tidyr, stringr, ggplot2, lubridate)
#upload datasets (Hiring information report from TT2, comprehensive report, and NHF from DOE client)
fellow_hiring <- read_csv("hiringinformation.csv")
##new_hire_file <- read_csv("fellowNHF.csv")
comprehensive <- read_csv("comprehensive.csv")
View(hiring_data)
#rename phone number column in fellow_hiring and new_hire_file
names(fellow_hiring)[names(fellow_hiring) == "RRPhoneNumber18"] <- "phone_number"
##names(new_hire_file)[names(new_hire_file) == "PhoneNumber"] <- "phone_number"
##need to remove any characters that are not numbers from the phone number field, this is trailing (look for code that removes special characters from inside vector)
trim.trailing <- function (x) sub("\\-s+$", "", x)
fellow_hiring$phone_number <- trim.trailing(fellow_hiring$phone_number)
fellow_hiring$phone_number <- gsub("[[:punct:]]", "", fellow_hiring$phone_number)
#change names of app user id field to match so I am able to join the comprehensive and fellow hiring datasets
names(fellow_hiring)[names(fellow_hiring) == "RRAppUserId1"] <- "appid"
names(comprehensive)[names(comprehensive) == "RRAppUserId3"] <- "appid"
#join comprehensive and fellow hiring
fellow_hiring <- left_join(fellow_hiring, comprehensive, by = "appid")
#next, need to remove unnecessary variables, like those related to schgeudling interviews
#keep only useful columns df <- subset(df, select = c(a,c))
#change names of school code field to DBN so I am able to join the renewal crosswalk and fellow hiring datasets, remove DBN NA
names(fellow_hiring)[names(fellow_hiring) == "RRSchoolCode5"] <- "DBN"
fellow_hiring <- filter(fellow_hiring, !is.na(DBN))
#change POCNonWhite column to name POC
names(fellow_hiring)[names(fellow_hiring) == "RRPOCNonWhite63"] <- "POC"
#filter for POC only, add to POCHiring
POCHiring<-filter(fellow_hiring, POC == 1)
#load packages
library(pacman)
p_load(readxl, readr, dplyr, janitor, tidyr, stringr, ggplot2, lubridate)
#upload datasets (Hiring information report from TT2, comprehensive report, and NHF from DOE client)
fellow_hiring <- read_csv("hiringinformation.csv")
##new_hire_file <- read_csv("fellowNHF.csv")
comprehensive <- read_csv("comprehensive.csv")
#rename phone number column in fellow_hiring and new_hire_file
names(fellow_hiring)[names(fellow_hiring) == "RRPhoneNumber18"] <- "phone_number"
##names(new_hire_file)[names(new_hire_file) == "PhoneNumber"] <- "phone_number"
##need to remove any characters that are not numbers from the phone number field, this is trailing (look for code that removes special characters from inside vector)
trim.trailing <- function (x) sub("\\-s+$", "", x)
fellow_hiring$phone_number <- trim.trailing(fellow_hiring$phone_number)
fellow_hiring$phone_number <- gsub("[[:punct:]]", "", fellow_hiring$phone_number)
#change names of app user id field to match so I am able to join the comprehensive and fellow hiring datasets
names(fellow_hiring)[names(fellow_hiring) == "RRAppUserId1"] <- "appid"
names(comprehensive)[names(comprehensive) == "RRAppUserId3"] <- "appid"
#join comprehensive and fellow hiring
fellow_hiring <- left_join(fellow_hiring, comprehensive, by = "appid")
#next, need to remove unnecessary variables, like those related to schgeudling interviews
#keep only useful columns df <- subset(df, select = c(a,c))
#change names of school code field to DBN so I am able to join the renewal crosswalk and fellow hiring datasets, remove DBN NA
names(fellow_hiring)[names(fellow_hiring) == "RRSchoolCode5"] <- "DBN"
fellow_hiring <- filter(fellow_hiring, !is.na(DBN))
fellow_hiring <- filter(fellow_hiring, !is.na(DBN))
names(fellow_hiring)[names(fellow_hiring) == "RRSchoolCode5"] <- "DBN"
fellow_hiring <- filter(fellow_hiring, !is.na(DBN))
View(fellow_hiring)
#load packages
library(pacman)
p_load(readxl, readr, dplyr, janitor, tidyr, stringr, ggplot2, lubridate)
#upload datasets (Hiring information report from TT2, comprehensive report, and NHF from DOE client)
fellow_hiring <- read_csv("hiringinformation.csv")
##new_hire_file <- read_csv("fellowNHF.csv")
comprehensive <- read_csv("comprehensive.csv")
#rename phone number column in fellow_hiring and new_hire_file
names(fellow_hiring)[names(fellow_hiring) == "RRPhoneNumber18"] <- "phone_number"
##names(new_hire_file)[names(new_hire_file) == "PhoneNumber"] <- "phone_number"
##need to remove any characters that are not numbers from the phone number field, this is trailing (look for code that removes special characters from inside vector)
trim.trailing <- function (x) sub("\\-s+$", "", x)
fellow_hiring$phone_number <- trim.trailing(fellow_hiring$phone_number)
fellow_hiring$phone_number <- gsub("[[:punct:]]", "", fellow_hiring$phone_number)
#change names of app user id field to match so I am able to join the comprehensive and fellow hiring datasets
names(fellow_hiring)[names(fellow_hiring) == "RRAppUserId1"] <- "appid"
names(comprehensive)[names(comprehensive) == "RRAppUserId3"] <- "appid"
View(fellow_hiring)
setwd("C:/Users/jules.liebster/Desktop/TNTP/NYCTF/R/Hiring Tracker - Copy")
#load packages
library(pacman)
p_load(readxl, readr, dplyr, janitor, tidyr, stringr, ggplot2, lubridate)
#upload datasets (Hiring information report from TT2, comprehensive report, and NHF from DOE client)
fellow_hiring <- read_csv("hiringinformation.csv")
##new_hire_file <- read_csv("fellowNHF.csv")
comprehensive <- read_csv("comprehensive.csv")
#rename phone number column in fellow_hiring and new_hire_file
names(fellow_hiring)[names(fellow_hiring) == "RRPhoneNumber18"] <- "phone_number"
##names(new_hire_file)[names(new_hire_file) == "PhoneNumber"] <- "phone_number"
##need to remove any characters that are not numbers from the phone number field, this is trailing (look for code that removes special characters from inside vector)
trim.trailing <- function (x) sub("\\-s+$", "", x)
fellow_hiring$phone_number <- trim.trailing(fellow_hiring$phone_number)
fellow_hiring$phone_number <- gsub("[[:punct:]]", "", fellow_hiring$phone_number)
View(fellow_hiring)
#change names of app user id field to match so I am able to join the comprehensive and fellow hiring datasets
names(fellow_hiring)[names(fellow_hiring) == "RRAppUserId1"] <- "appid"
names(comprehensive)[names(comprehensive) == "RRAppUserId3"] <- "appid"
#join comprehensive and fellow hiring
fellow_hiring <- left_join(fellow_hiring, comprehensive, by = "appid")
#next, need to remove unnecessary variables, like those related to schgeudling interviews
#keep only useful columns df <- subset(df, select = c(a,c))
#change names of school code field to DBN so I am able to join the renewal crosswalk and fellow hiring datasets, remove DBN NA
names(fellow_hiring)[names(fellow_hiring) == "RRSchoolCode5"] <- "DBN"
fellow_hiring <- filter(fellow_hiring, !is.na(DBN))
#change POCNonWhite column to name POC
names(fellow_hiring)[names(fellow_hiring) == "RRPOCNonWhite63"] <- "POC"
#filter for POC only, add to POCHiring
POCHiring<-filter(fellow_hiring, POC == 1)
View(fellow_hiring)
names(fellow_hiring)[names(fellow_hiring) == "RRPOCNonWhite63"] <- "POC"
POCHiring<-filter(fellow_hiring, POC == 1)
View(fellow_hiring)
